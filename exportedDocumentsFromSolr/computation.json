{
  "responseHeader":{
    "status":0,
    "QTime":2,
    "params":{
      "q":"*:*",
      "rows":"1000",
      "_":"1569728711517"}},
  "response":{"numFound":48,"start":0,"docs":[
      {
        "tag":["solr"],
        "title":["Lucene Query Syntax"],
        "citation":["http://www.solrtutorial.com/solr-query-syntax.html"],
        "created":["20190418.1155"],
        "id":"79edbce8-b4cf-426c-9c10-4550c5e07c86",
        "info":["Lucene has a custom query syntax for querying its indexes. Unless you explicitly specify an alternative query parser such as DisMax or eDisMax, you're using the standard Lucene query parser by default.\n\nHere are some query examples demonstrating the query syntax.\n\nKeyword matching\nSearch for word \"foo\" in the title field.\n\ntitle:foo\nSearch for phrase \"foo bar\" in the title field.\n\ntitle:\"foo bar\"\nSearch for phrase \"foo bar\" in the title field AND the phrase \"quick fox\" in the body field.\n\ntitle:\"foo bar\" AND body:\"quick fox\"\nSearch for either the phrase \"foo bar\" in the title field AND the phrase \"quick fox\" in the body field, or the word \"fox\" in the title field.\n\n(title:\"foo bar\" AND body:\"quick fox\") OR title:fox\nSearch for word \"foo\" and not \"bar\" in the title field.\n\ntitle:foo -title:bar\nWildcard matching\nSearch for any word that starts with \"foo\" in the title field.\n\ntitle:foo*\nSearch for any word that starts with \"foo\" and ends with bar in the title field.\n\ntitle:foo*bar\nNote that Lucene doesn't support using a * symbol as the first character of a search.\n\nProximity matching\nLucene supports finding words are a within a specific distance away.\n\nSearch for \"foo bar\" within 4 words from each other.\n\n\"foo bar\"~4\nNote that for proximity searches, exact matches are proximity zero, and word transpositions (bar foo) are proximity 1.\n\nA query such as \"foo bar\"~10000000 is an interesting alternative to foo AND bar.\n\nWhilst both queries are effectively equivalent with respect to the documents that are returned, the proximity query assigns a higher score to documents for which the terms foo and bar are closer together.\n\nThe trade-off, is that the proximity query is slower to perform and requires more CPU.\n\nSolr DisMax and eDisMax query parsers can add phrase proximity matches to a user query.\n\nRange searches\nRange Queries allow one to match documents whose field(s) values are between the lower and upper bound specified by the Range Query. Range Queries can be inclusive or exclusive of the upper and lower bounds. Sorting is done lexicographically.\n\nmod_date:[20020101 TO 20030101]\nSolr's built-in field types are very convenient for performing range queries on numbers without requiring padding.\n\nBoosts\nQuery-time boosts allow one to specify which terms/clauses are \"more important\". The higher the boost factor, the more relevant the term will be, and therefore the higher the corresponding document scores.\n\nA typical boosting technique is assigning higher boosts to title matches than to body content matches:\n\n(title:foo OR title:bar)^1.5 (body:foo OR body:bar)\nYou should carefully examine explain output to determine the appropriate boost weights.\n\nThe official docs for the query parser syntax are here: http://lucene.apache.org/java/3_5_0/queryparsersyntax.html\n\nThe query syntax has not changed significantly since Lucene 1.3 (it is now 3.5.0).\n\nSolr-specific query syntax\nHere is a list of differences between the Solr Query Parser and the standard Lucene query syntax (from the Solr wiki):\n\nRange queries [a TO z], prefix queries a*, and wildcard queries a*b are constant-scoring (all matching documents get an equal score). The scoring factors tf, idf, index boost, and coord are not used. There is no limitation on the number of terms that match (as there was in past versions of Lucene).\n\nLucene 2.1 has also switched to use ConstantScoreRangeQuery for its range queries.\n\nA * may be used for either or both endpoints to specify an open-ended range query.\n\nfield:[* TO 100] finds all field values less than or equal to 100\n\nfield:[100 TO *] finds all field values greater than or equal to 100\n\nfield:[* TO *] matches all documents with the field\n\nPure negative queries (all clauses prohibited) are allowed.\n-inStock:false finds all field values where inStock is not false\n\n-field:[* TO *] finds all documents without a value for field\n\nA hook into FunctionQuery syntax. Quotes will be necessary to encapsulate the function when it includes parentheses.\n\nExample: _val_:myfield\n\nExample: _val_:\"recip(rord(myfield),1,2,3)\"\n\nNested query support for any type of query parser (via QParserPlugin). Quotes will often be necessary to encapsulate the nested query if it contains reserved characters.\nExample: _query_:\"{!dismax qf=myfield}how now brown cow\""],
        "_version_":1631179356511404032},
      {
        "title":["solr index commit"],
        "citation":["https://lucene.apache.org/solr/guide/6_6/near-real-time-searching.html"],
        "created":["20190417.1226"],
        "info":["A commit operation makes index changes visible to new search requests. A hard commit uses the transaction log to get the id of the latest document changes, and also calls fsync on the index files to ensure they have been flushed to stable storage and no data loss will result from a power failure.\nA soft commit is much faster since it only makes index changes visible and does not fsync index files or write a new index descriptor. If the JVM crashes or there is a loss of power, changes that occurred after the last hard commit will be lost. Search collections that have NRT requirements (that want index changes to be quickly visible to searches) will want to soft commit often but hard commit less frequently. A softCommit may be \"less expensive\" in terms of time, but not free, since it can slow throughput.\nAn optimize is like a hard commit except that it forces all of the index segments to be merged into a single segment first. Depending on the use, this operation should be performed infrequently (e.g., nightly), if at all, since it involves reading and re-writing the entire index. Segments are normally merged over time anyway (as determined by the merge policy), and optimize just forces these merges to occur immediately.\n\nSoft commit takes uses two parameters: maxDocs and maxTime.\nParameter \tDescription\n\nmaxDocs\nInteger. Defines the number of documents to queue before pushing them to the index. It works in conjunction with the update_handler_autosoftcommit_max_time parameter in that if either limit is reached, the documents will be pushed to the index.\n\nmaxTime:\nThe number of milliseconds to wait before pushing documents to the index. It works in conjunction with the update_handler_autosoftcommit_max_docs parameter in that if either limit is reached, the documents will be pushed to the index.\nUse maxDocs and maxTime judiciously to fine-tune your commit strategies.\n\nafds\nasd\nf\nasdf\nasdfasdf"],
        "id":"77e0f790-94c2-4230-b9f0-0ad3e3191505",
        "_version_":1631090560246743040},
      {
        "tag":["asymptotic notation"],
        "title":["big O notation"],
        "citation":["wikipedia"],
        "created":["20190418.0938"],
        "info":["Mathematical notation that describes the limiting behavior of a function when the argument tends towards a particular value or infinity. It is a member of a family of notations invented by Paul Bachmann,[1] Edmund Landau,[2] and others, collectively called Bachmann–Landau notation or asymptotic notation.\n\nGrowth can be indicated as the \"order of the function\":\nO(1)\t\t\tconstant\t\t\tDetermining if a binary number is even or odd; Calculating {\\displaystyle (-1)^{n}} (-1)^{n}; Using a constant-size lookup table\nO(log n)\t\tlogarithmic\t\tFinding an item in a sorted array with a binary search or a balanced search tree as well as all operations in a Binomial heap\nO((logn)^c)\tpolylogarithmic\tMatrix chain ordering can be solved in polylogarithmic time on a parallel random-access machine.\nO(n)\t\t\tlinear\t\t\tFinding an item in an unsorted list or in an unsorted array; adding two n-bit integers by ripple carry\nO(n^2)\t\tquadratic\t\t\tMultiplying two n-digit numbers by a simple algorithm; simple sorting algorithms, such as bubble sort, selection sort and insertion sort; (worst case) bound on some usually faster sorting algorithms such as quicksort, Shellsort, and tree sort\nO(n!)\t\tfactorial\t\t\tSolving the travelling salesman problem via brute-force search; generating all unrestricted permutations of a poset; finding the determinant with Laplace expansion; enumerating all partitions of a set"],
        "id":"b472d66b-4efc-49ec-b2fc-c6bd34ed8909",
        "_version_":1631171109038587904},
      {
        "tag":["error-correcting code memory"],
        "title":["ecc memory"],
        "citation":["https://en.wikipedia.org/wiki/ECC_memory"],
        "created":["20190418.0857"],
        "info":["A type of computer data storage that can detect and correct the most common kinds of internal data corruption. ECC memory is used in most computers where data corruption cannot be tolerated under any circumstances, such as for scientific or financial computing.\n\nTypically, ECC memory maintains a memory system immune to single-bit errors: the data that is read from each word is always the same as the data that had been written to it, even if one or more bits actually stored have been flipped to the wrong state. Most non-ECC memory cannot detect errors although some non-ECC memory with parity support allows detection but not correction. "],
        "id":"0200afbf-6070-44fd-b908-20b60b4f8a5d",
        "_version_":1631168058170015744},
      {
        "tag":["java jvm dynamic class loading security model"],
        "title":["Java Class Loaders"],
        "citation":["cert secure coding course"],
        "created":["20190415.1201"],
        "info":["Many JVMs deliberately defer class loading until a class is requested\n* Smaller average memory footprint\n* Avoids wasting time loading unneeded classes\n\nResponsible for loading all classes needed by the program\nAll class loaders inherit from java.lang.ClassLoader\nEvery object can access its class using Object.getClass()\nEvery class can access its class loader using Class.getClassLoader()\nSince every class loader is itself a class, it has its own class loader, so class loaders have a “loading tree”\n\nClass loaders also have an inheritance tree with java.lang.ClassLoader at the root"],
        "id":"a2d9f3cc-30cd-4ea7-9548-a93baf2d4e5b",
        "_version_":1630907967215763456},
      {
        "tag":["new one good stuff"],
        "title":["one two three"],
        "citation":["sasdflaskd jf;las jdfoias dfija"],
        "created":["20190417.1241"],
        "info":["this is the new stuff\t\t\t\t\tasdfasdf"],
        "id":"6a2dc6ae-52d5-454e-afe3-0a484b669e2e",
        "_version_":1631091543196565504},
      {
        "tag":["tsql"],
        "title":["sql server functions"],
        "created":["20190424.1051"],
        "id":"bbb2e8be-e1c9-4d20-9df2-8f59d43e7708",
        "info":["SQL Server String Functions\nFunction\tDescription\nASCII\tReturns the ASCII value for the specific character\nCHAR\tReturns the character based on the ASCII code\nCHARINDEX\tReturns the position of a substring in a string\nCONCAT\tAdds two or more strings together\nConcat with +\tAdds two or more strings together\nCONCAT_WS\tAdds two or more strings together with a separator\nDATALENGTH\tReturns the number of bytes used to represent an expression\nDIFFERENCE\tCompares two SOUNDEX values, and returns an integer value\nFORMAT\tFormats a value with the specified format\nLEFT\tExtracts a number of characters from a string (starting from left)\nLEN\tReturns the length of a string\nLOWER\tConverts a string to lower-case\nLTRIM\tRemoves leading spaces from a string\nNCHAR\tReturns the Unicode character based on the number code\nPATINDEX\tReturns the position of a pattern in a string\nQUOTENAME\tReturns a Unicode string with delimiters added to make the string a valid SQL Server delimited identifier\nREPLACE\tReplaces all occurrences of a substring within a string, with a new substring\nREPLICATE\tRepeats a string a specified number of times\nREVERSE\tReverses a string and returns the result\nRIGHT\tExtracts a number of characters from a string (starting from right)\nRTRIM\tRemoves trailing spaces from a string\nSOUNDEX\tReturns a four-character code to evaluate the similarity of two strings\nSPACE\tReturns a string of the specified number of space characters\nSTR\tReturns a number as string\nSTUFF\tDeletes a part of a string and then inserts another part into the string, starting at a specified position\nSUBSTRING\tExtracts some characters from a string\nTRANSLATE\tReturns the string from the first argument after the characters specified in the second argument are translated into the characters specified in the third argument.\nTRIM\tRemoves leading and trailing spaces (or other specified characters) from a string\nUNICODE\tReturns the Unicode value for the first character of the input expression\nUPPER\tConverts a string to upper-case\n\nSQL Server Math/Numeric Functions\nFunction\tDescription\nABS\tReturns the absolute value of a number\nACOS\tReturns the arc cosine of a number\nASIN\tReturns the arc sine of a number\nATAN\tReturns the arc tangent of a number\nATN2\tReturns the arc tangent of two numbers\nAVG\tReturns the average value of an expression\nCEILING\tReturns the smallest integer value that is >= a number\nCOUNT\tReturns the number of records returned by a select query\nCOS\tReturns the cosine of a number\nCOT\tReturns the cotangent of a number\nDEGREES\tConverts a value in radians to degrees\nEXP\tReturns e raised to the power of a specified number\nFLOOR\tReturns the largest integer value that is <= to a number\nLOG\tReturns the natural logarithm of a number, or the logarithm of a number to a specified base\nLOG10\tReturns the natural logarithm of a number to base 10\nMAX\tReturns the maximum value in a set of values\nMIN\tReturns the minimum value in a set of values\nPI\tReturns the value of PI\nPOWER\tReturns the value of a number raised to the power of another number\nRADIANS\tConverts a degree value into radians\nRAND\tReturns a random number\nROUND\tRounds a number to a specified number of decimal places\nSIGN\tReturns the sign of a number\nSIN\tReturns the sine of a number\nSQRT\tReturns the square root of a number\nSQUARE\tReturns the square root of a number\nSUM\tCalculates the sum of a set of values\nTAN\tReturns the tangent of a number\n\nSQL Server Date Functions\nFunction\tDescription\nCURRENT_TIMESTAMP\tReturns the current date and time\nDATEADD\tAdds a time/date interval to a date and then returns the date\nDATEDIFF\tReturns the difference between two dates\nDATEFROMPARTS\tReturns a date from the specified parts (year, month, and day values)\nDATENAME\tReturns a specified part of a date (as string)\nDATEPART\tReturns a specified part of a date (as integer)\nDAY\tReturns the day of the month for a specified date\nGETDATE\tReturns the current database system date and time\nGETUTCDATE\tReturns the current database system UTC date and time\nISDATE\tChecks an expression and returns 1 if it is a valid date, otherwise 0\nMONTH\tReturns the month part for a specified date (a number from 1 to 12)\nSYSDATETIME\tReturns the date and time of the SQL Server\nYEAR\tReturns the year part for a specified date\n\nSQL Server Advanced Functions\nFunction\tDescription\nCAST\tConverts a value (of any type) into a specified datatype\nCOALESCE\tReturns the first non-null value in a list\nCONVERT\tConverts a value (of any type) into a specified datatype\nCURRENT_USER\tReturns the name of the current user in the SQL Server database\nISNULL\tReturn a specified value if the expression is NULL, otherwise return the expression\nISNUMERIC\tTests whether an expression is numeric\nNULLIF\tReturns NULL if two expressions are equal\nSESSION_USER\tReturns the name of the current user in the SQL Server database\nSESSIONPROPERTY\tReturns the session settings for a specified option\nSYSTEM_USER\tReturns the login name for the current user\nUSER_NAME\tReturns the database user name based on the specified id"],
        "_version_":1631718846887886848},
      {
        "title":["The Rise of Generative Adversarial Networks"],
        "citation":["Kailash Ahirwar Mar 28 https://blog.usejournal.com/the-rise-of-generative-adversarial-networks..."],
        "created":["20190429.1021"],
        "info":["5 years back, Generative Adversarial Networks(GANs) started a revolution in deep learning. This revolution has produced some major technological breakthroughs. Generative Adversarial Networks were introduced by Ian Goodfellow and others in the paper titled “Generative Adversarial Networks” — https://arxiv.org/abs/1406.2661. Academia accepted GANs with open hands and industry welcomed GANs with much fanfare too. The rise of GANs was inevitable.\n\nFirst, the best thing about GANs is their nature of learning, which is unsupervised. GANs don’t need labeled data, which makes GANs powerful as the boring work of data labeling is not required.\n\nSecond, the potential use-cases of GANs have put GANs at the center of conversations. They can generate high-quality images, enhance photos, generate images from text, convert images from one domain to another, change the appearance of the face image as age progresses and many more. The list is endless. We will cover some of the widely popular GAN architectures in this article.\n\nThird, the endless research put around GANs is so mesmerizing that it grabs the attention of every other industry. We will be talking about major technological breakthroughs in the later section of this article."],
        "id":"5f3db7f1-b70f-4715-9832-c2318b7c9a1a",
        "_version_":1632169956805181440},
      {
        "tag":["acm free webinar deep learning"],
        "title":["Adversarial Machine Learning"],
        "updated":["20190429.0947"],
        "created":["20190429.0944"],
        "info":["http://www.deeplearningbook.org/\n\n\"Adversarial Machine Learning,\" presented on Tuesday, July 24 at 12 PM ET by Ian Goodfellow, Staff Research Scientist at Google Brain. Negar Rostamzadeh, Research Scientist at Element AI, moderates the questions and answers session.\n\nMost machine learning algorithms involve optimizing a single set of parameters to decrease a single cost function. In adversarial machine learning, two or more \"players\" each adapt their own parameters to decrease their own cost, in competition with the other players. In some adversarial machine learning algorithms, the algorithm designer contrives this competition between two machine learning models in order to produce a beneficial side effect. For example, the generative adversarial networks framework involves a contrived conflict between a generator network and a discriminator network that results in the generator learning to produce realistic data samples. In other contexts, adversarial machine learning models a real conflict, for example, between spam detectors and spammers. In general, moving machine learning from optimization and a single cost to game theory and multiple costs has led to new insights in many application areas.\n"],
        "id":"a9b08579-8dcf-4d49-8a0a-9843a9cb3571",
        "_version_":1632167741977788416},
      {
        "title":["Star Schema"],
        "citation":["wikipedia"],
        "created":["20190501.1003"],
        "info":["In computing, the star schema is the simplest style of data mart schema and is the approach most widely used to develop data warehouses and dimensional data marts. The star schema consists of one or more fact tables referencing any number of dimension tables. The star schema is an important special case of the snowflake schema, and is more effective for handling simpler queries.\n\nThe star schema gets its name from the physical model's resemblance to a star shape with a fact table at its center and the dimension tables surrounding it representing the star's points.\n\nA star schema that has many dimensions is sometimes called a centipede schema.\n\nFor example, the following query answers how many TV sets have been sold, for each brand and country, in 1997:\nSELECT\n\tP.Brand,\n\tS.Country AS Countries,\n\tSUM(F.Units_Sold)\n\nFROM Fact_Sales F\nINNER JOIN Dim_Date D    ON (F.Date_Id = D.Id)\nINNER JOIN Dim_Store S   ON (F.Store_Id = S.Id)\nINNER JOIN Dim_Product P ON (F.Product_Id = P.Id)\n\nWHERE D.Year = 1997 AND  P.Product_Category = 'tv'\n\nGROUP BY\n\tP.Brand,\n\tS.Country"],
        "id":"4fc291ac-94de-4a03-bbdc-ce003dfe0d68",
        "_version_":1632350125061832704},
      {
        "tag":["java floating point cert"],
        "title":["NUM54-J. Do not use denormalized numbers"],
        "updated":["20190503.1328"],
        "citation":["cert java secure coding course"],
        "created":["20190503.1324"],
        "info":["strictfp public static boolean isDenormalized(float val) {\n\tif (val == 0) {\n\t\treturn false;\n\t}\n\tif ((val > -Float.MIN_NORMAL) && (val < Float.MIN_NORMAL)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\n Risks\n\t• Loss of precision can lead to incorrect results\n\t• Print representation can be unexpected (leading 0)\n\t• Loss of precision can break numeric algorithms (non-convergence can cause DoS via infinite loop or wildly incorrect answers, depending on the algorithm)\n\t\nExceptions\n\t• Denormalized numbers are acceptable when suitable numeric analysis shows that all relevant accuracy and behavioral requirements are preserved"],
        "id":"9248966d-757c-4ea6-8668-8bc7f5eed6f9",
        "_version_":1632544044032720896},
      {
        "title":["sorting algorithms"],
        "created":["20190424.1625"],
        "info":["Selection Sort\nBubble Sort\nRecursive Bubble Sort\nInsertion Sort\nRecursive Insertion Sort\nMerge Sort\nIterative Merge Sort\nQuick Sort\nIterative Quick Sort\nHeap Sort\nCounting Sort\nRadix Sort\nBucket Sort\nShellSort\nTimSort\nComb Sort\nPigeonhole Sort\nCycle Sort\nCocktail Sort\nStrand Sort\nBitonic Sort\nPancake sorting\nBinary Insertion Sort\nBogoSort or Permutation Sort\nGnome Sort\nSleep Sort – The King of Laziness / Sorting while Sleeping\nStructure Sorting (By Multiple Rules) in C++\nStooge Sort\nTag Sort (To get both sorted and original)\nTree Sort\nCartesian Tree Sorting\nOdd-Even Sort / Brick Sort\nQuickSort on Singly Linked List\nQuickSort on Doubly Linked List\n3-Way QuickSort (Dutch National Flag)\nMerge Sort for Linked Lists\nMerge Sort for Doubly Linked List\n3-way Merge Sort"],
        "id":"f31a44db-8d18-4ee5-844d-df00834d1c3b",
        "_version_":1631740069390843904},
      {
        "tag":["scala for loop"],
        "title":["Iterate over a map"],
        "created":["20190427.1936"],
        "info":["val servers = ListMap(\"\",\"\")\nfor((k,v) <- servers) {\n      try\n      {\n        println(\"key=\" + k + \", value=\" + v)\n      }\n      catch\n      {\n        case e: Exception => println(\"Problem occurred\")\n      }\n}"],
        "id":"fd0291fd-9f2a-47d7-90a4-1b194e361a38",
        "_version_":1632023790433075200},
      {
        "title":["Java Memory Model"],
        "citation":["cert secure coding course"],
        "created":["20190503.1340"],
        "id":"8ce310f3-5d8f-44b8-a62d-45d87dbfd878",
        "info":["package G_memoryModel;\n\nimport java.util.concurrent.locks.ReentrantLock;\n\npublic class MemoryModelOverview\n{\t\n\t/*\n\t * This module is really just setting up the rules for the basis of the memory model,\n\t * which is the idea of 'happens-before'.\n\t * \n\t * - processor performance will now be driven by Amdahl's law, rather than Moore's law, due\n\t *\t\tto the use of multiple processors (concurrency); new types of issues will now be suspect\n\t *\n\t * - fail-fast: when a failure is made apparent immediately, whereas most concurrency issues are 'fail-slow',\n\t * \t\tsince they are more discrete\n\t * \n\t * - a 'very readable coverage of the memory model is presented in Chapter 16 of Java Concurrency in Practice \n\t * \t\t(Goetz, et al.)\n\t * \n\t * - \"memory model finalized in java 5, of which there were earlier versions of the model\" (per d.svboda)\n\t *\t\t\n\t * - \"latest versions of c and c++ stds. employ memory models that were based upon the java model; a lot of the\n\t * \t\tsame people were involved...\" (per d.svboda)\n\t * \n\t * - 'happens-before' relationship is the key to the java memory model, which guarantees on the order of execution,\n\t * \t\tNOT IN CHRONOLOGICL ORDER THOUGH!!! The timing of the events may be switched around by\n\t * \t\tthe compiler, the memory modely, runtime, etc..., as long as the guarantees fo the model\n\t * \t\tstill work, that a particular result 'happens before' another suspect event\n\t * \n\t * RULES\n\t * \n\t * 1 - program order rule - Each action in a thread happens-before every action in that thread that comes later\n\t * \t\tin program order (lexicographically in the code)\n\t * \n\t * 2 - lock order rule - basically, you can't lock an object before it's been unlocked by another (for intrinsic\n\t * \t\tor explicit lock)\n\t * \n\t * 3 - volatile rule - A write to a volatile field happens-before every subsequent read of that same field,\n\t * \t\twhich essentially guarantees no contention (cannot rely on this in more sophisticated cases);\n\t * \n\t * \t - volatile has no connection to the same word in c/cpp code (not a concurrency concept in those other langs)\n\t * \n\t * 4 - thread start rule - A call to start() on a thread happens-before any action in the started thread \n\t * \t\t(pretty straight forward)\n\t * \n\t * 5 - thread termination rule - All actions in a thread happen-before any other thread detects that that thread \n\t * \t\thas terminated (i.e., via a call to join() or isAlive())\n\t * \n\t * 6 - thread interruption rule - A thread calling interrupt() on another thread happens-before the interrupted thread \n\t * \t\tdetects the interrupt\n\t * \n\t * 7 - finalizer rule - The end of a constructor for an object happens-before the start of the finalizer for that object\n\t * \t\t\n\t * \t\t* (Side Note) Bloch Effective Java Item 7: \n\t * \t\t\tAvoid Finalizers “unpredictable, often dangerous, and generally unnecessary” “severe performance penalty”\n\t * \n\t *  8 - transitivity rule - If A happens-before B, and B happens-before C, then A happens-before C\n\t *  \n\t */\n\t\n\t\n\t/*********************************************************************************\n\t *\tTwo examples of the idea that a lock may not be obtained by\n\t *\tone thread until the currently owning thread has completely unlocked it,\n\t *\twhether by an intrinsic lock or an explicit lock object.\n\t */\n\tfinal ReentrantLock lock = new ReentrantLock();\n\tlong oscillator = 0;\n\n\tvoid explicitLockPerRule2() {\n\t\tlock.lock();\n\t\ttry {\n\t\t\tif (oscillator == 1)\n\t\t\t\toscillator = 0;\n\t\t\telse\n\t\t\t\toscillator = 1;\n\t\t} finally {\n\t\t\tlock.unlock();\n\t\t}\n\t}\n\n\tfinal Object myObj = new Object();\n\n\tvoid intrinsicLockPerRule2() {\n\t\tsynchronized (myObj)\n\t\t{\n\t\t\tif (oscillator == 1)\n\t\t\t\toscillator = 0;\n\t\t\telse\n\t\t\t\toscillator = 1;\n\t\t}\n\t}\n\t\n\t/*********************************************************************************\n\t * Volatile word indicates that a particular variable must be written\n\t * before it can be read again, by guarantee, an important distinction when\n\t * it comes to multi-processor/threaded programs\n\t */\n\tvolatile boolean shutdown = false;\n\tvoid requestShutdown() {\n\t\tshutdown = true;\n\t}\n\n\tboolean isShutdownRequested() {\n\t\treturn shutdown;\n\t}\n}\n"],
        "_version_":1632544810760929280},
      {
        "tag":["java concurrency locking thread safety"],
        "title":["Concurrent Object Update"],
        "citation":["cert secure java course"],
        "created":["20190503.1347"],
        "info":["package H_concurrency.avoidLocking;\n\nimport java.util.Random;\nimport java.util.concurrent.locks.Lock;\nimport java.util.concurrent.locks.ReentrantLock;\n\n\n/**\n * 3 potential solutions:\n * \n *\t1 Use a single lock for all transfers\n *\t2 Acquire and release locks in a single, consistent (partial) order\n *\t3 Use reentrant locks and lock.tryLock()\n *\n *\tThis suggested solution is using the 3rd approach..\n */\npublic class BankAccountGood {\n\tprivate double balanceAmount; // Total amount in bank account\n\tprivate final Lock lock = new ReentrantLock();\n\tprivate final Random number = new Random(123L);\n\n\tBankAccountGood(double balance) {\n\t\tthis.balanceAmount = balance;\n\t}\n\n\tpublic static void initiateTransfer(final BankAccountGood first, final BankAccountGood second,\n\t\t\tfinal double amount) \n\t{\n\t\tThread transfer = new Thread(new Runnable() {\n\t\t\tpublic void run() {\n\t\t\t\ttry {\n\t\t\t\t\tfirst.depositAmount(second, amount);\n\t\t\t\t} catch (InterruptedException e) {\n\t\t\t\t\tThread.currentThread().interrupt();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\ttransfer.start();\n\t}\n\n\tprivate void depositAmount(BankAccountGood ba, double amount) throws InterruptedException\n\t{\n\t\twhile (true) {\n\t\t\tif (this.lock.tryLock()) \n\t\t\t{\n\t\t\t\ttry \n\t\t\t\t{\n\t\t\t\t\tif (ba.lock.tryLock()) \n\t\t\t\t\t{\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (amount > balanceAmount) {\n\t\t\t\t\t\t\t\tthrow new IllegalArgumentException(\"Transfer failed\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tba.balanceAmount += amount;\n\t\t\t\t\t\t\tthis.balanceAmount -= amount;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} \n\t\t\t\t\t\tfinally {\n\t\t\t\t\t\t\tba.lock.unlock();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} \n\t\t\t\tfinally {\n\t\t\t\t\tthis.lock.unlock();\n\t\t\t\t}\n\t\t\t}\n\t\t\tint n = number.nextInt(1000);\n\t\t\t\n\t\t\t/* \trandom delay prevents livelock (else both objects would \n\t\t\t * \ttry again at the same time, and would wait on eachother further)\n\t\t\t*/\n\t\t\tint TIME = 1000 + n; \n\t\t\tThread.sleep(TIME);\n\t\t}\n\t}\n}\n"],
        "id":"ff24f9d7-4007-4dce-9595-c4bbffcb7b29",
        "_version_":1632545373521182720},
      {
        "tag":["java"],
        "title":["TOCTOU Race Condition"],
        "citation":["cert secure java course"],
        "created":["20190503.1343"],
        "info":["package H_concurrency;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.nio.file.attribute.BasicFileAttributes;\n\npublic class ToctouRaceCondition {\n\n/**\n * TOCTOU = \"time of check, time of use\", a form of race condition where\n * \t\tan attacker can modify resources within a window of opportunity\n * \n * This is apparently proven to be unsolvable, but there are things that may\n * be done to detect a modification of a resource as you work with it (in this\n * case, a file).\n * \n * @throws IOException \n */\n\t\n\tpublic void raceWindowExample() throws IOException {\n\t\tString filename = \"safeGuy\"/* provided by user */;\n\t\tPath path = new File(filename).toPath();\n\t\t\n\t\tBasicFileAttributes attr = Files.readAttributes(path, BasicFileAttributes.class);\n\t\tif (!attr.isRegularFile()) {\n\t\t\tSystem.out.println(\"Not a regular file\");\n\t\t\treturn;\n\t\t}\n\t\ttry (InputStream in = Files.newInputStream(path)) {\n\t\t\t// read file\n\t\t} catch (IOException x) {\n\t\t\t// handle error\n\t\t}\n\t}\n\n\t/**\n\t * This is a shot at detecting a modified file, it is not\n\t * a way to prevent it...\n\t */\n\tpublic void raceWindowMitigation() throws IOException {\n\t\tString filename = \"safeGuy\"/* provided by user */;\n\t\tPath path = new File(filename).toPath();\n\t\t\n\t\tBasicFileAttributes firstCheck = Files.readAttributes(path, BasicFileAttributes.class);\n\t\tObject fileKey = firstCheck.fileKey();\n\t\t// …Perform checks..\n\t\t// Use\n\t\ttry (InputStream in = Files.newInputStream(path)) {\n\t\t\t// Check again after stream has been opened/read\n\t\t\tBasicFileAttributes secondCheck = Files.readAttributes(path, BasicFileAttributes.class);\n\t\t\tObject fileKey2 = secondCheck.fileKey();\n\t\t\tif (!fileKey.equals(fileKey2)) {\n\t\t\t\tSystem.out.println(\"File has been tampered with\");\n\t\t\t}\n\t\t}\n\n\t}\n}\n"],
        "id":"49beb806-8ee6-493b-8fff-99bd33222558",
        "_version_":1632545160498774016},
      {
        "tag":["java "],
        "title":["Path canonicalization and absolution"],
        "citation":["cert secure coding course"],
        "created":["20190503.1338"],
        "info":["package E_inputOutput;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.nio.file.FileSystem;\nimport java.nio.file.FileSystems;\nimport java.nio.file.Files;\nimport java.nio.file.LinkOption;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\nimport java.util.Map;\n\n/**\n * FIO16-J. Canonicalize path names before validating them\n *\n * Canonical form is the standard form or representation for something\n *  \n * Canonicalization is the process by which various equivalent forms \n * of a name can be resolved to a single, standard name.\n * \n * The canonical form of a path:\n * 1) does not contain path traversal inidications ('..' or '.' or '~')\n * 2) does not use symlinks (or has already followed them)\n * 3) is absolute (from the root of the file directory)\n * 4) is unique\n * \n */\npublic class CanonicalizationAndMetadata {\n\t\n\tpublic static void main(String argv) throws IOException\n\t{\n\t\tnew CanonicalizationAndMetadata().canonicalize();\n\t\tnew CanonicalizationAndMetadata().metadata();\n\t\n\t}\n\tpublic void canonicalize() throws IOException\n\t{\n\t\tSystem.out.println(new File(\".\").getCanonicalPath());\t\t\n\t}\n\t\n\tpublic void metadata() throws IOException\n\t{\n\t\tPath root = FileSystems.getDefault().getPath(\"\\\\\", \"*\");\n\t\tMap<String, Object> atts = Files.readAttributes(root, \"*\", null);\n\t\tfor(String key : atts.keySet())\n\t\t\tSystem.out.println(atts.get(key));\n\t}\n\t\n\tpublic void absolution() throws IOException\n\t{\t\t\n\t\tSystem.out.println(new File(\".\").getAbsolutePath());\n\t}\n\n}\n"],
        "id":"f464a442-2245-4208-9abb-1bddcd16039e",
        "_version_":1632544709240946688},
      {
        "tag":["java autoclosable"],
        "title":["Try with resources statement"],
        "citation":["cert secure java"],
        "created":["20190503.1334"],
        "info":["package D_objectsAndMethods;\n\nimport java.sql.Connection;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Statement;\n\n/**\n * - New NIO interface - try-with-resources - Multiple exceptions in catch clause \n */\npublic class ResourceCleanupJava7 extends ResourceCleanup {\n\n\t/**\n\t * Looks like a try statement, but allows developers to open resources that get\n\t * closed automatically\n\t * \n\t * Catches any exceptions involved with opening or closing resources.\n\t * \n\t * Works on all resources that implement Closeable or AutoCloseable interfaces,\n\t * including I/O streams, sockets, channels, etc.\n\t */\n\tvoid tryWithResources(String sqlQuery)\n\t{\n\t\ttry (\n\t\t\tConnection conn = getConnection();\n\t\t\tStatement stmt = conn.createStatement();\n\t\t\tResultSet rs = stmt.executeQuery(sqlQuery))\n\t\t{\n\t\t\tprocessResults(rs);\n\t\t} \n\t\tcatch (SQLException e) {\n\t\t\t// forward to handler\n\t\t}\n\t}\n}\n"],
        "id":"e5bc2bda-bd30-4072-84bb-c79a4bc1ca27",
        "_version_":1632544472370774016},
      {
        "tag":["java"],
        "title":["Defensive copying"],
        "citation":["cert secure java"],
        "created":["20190503.1332"],
        "info":["package D_objectsAndMethods;\nimport java.util.Hashtable;\n\n/**\n * Defensive Copying, where the idea is to return immutable data unless\n * otherwise necessary!!\n * \n * @see OBJ06-J. Defensively copy mutable inputs and mutable internal components\n * https://wiki.sei.cmu.edu/confluence/display/java/OBJ06-J.+Defensively+copy+mutable+inputs+and+mutable+internal+components * \n */\npublic class DefensiveCopyingGood {\n\n\t// Internal state, may contain sensitive data\n\tprivate Hashtable<Integer, String> ht = new Hashtable<Integer, String>();\n\n\tprivate DefensiveCopyingGood() {\n\t\tht.put(1, \"123-45-6666\");\n\t}\n\n\tprivate Hashtable<Integer, String> getValues() {\n\n\t\t// RETURN A SHALLOW COPY ONLY, CANNOT MODIFY THIS OBJECT STATE\n\t\treturn (Hashtable<Integer, String>) ht.clone();\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tDefensiveCopyingGood rr = new DefensiveCopyingGood();\n\t\tHashtable<Integer, String> ht1 = rr.getValues();\n\t\t// prints non sensitive data\n\t\tht1.remove(1); // untrusted caller can remove entries only from the copy\n\t\tHashtable<Integer, String> ht2 = rr.getValues();\n\t\t// prints non sensitive data\n\t}\n}"],
        "id":"cb6a9c89-8025-454a-ba34-dcdeb18bc987",
        "_version_":1632544307811450880},
      {
        "tag":["java security"],
        "title":["Privleged Operations"],
        "citation":["cert secure coding course"],
        "created":["20190503.1351"],
        "info":["package J_securityModel;\n\nimport java.security.AccessControlContext;\nimport java.security.AccessController;\nimport java.security.Permission;\nimport java.security.PrivilegedAction;\nimport java.security.PrivilegedActionException;\nimport java.security.PrivilegedExceptionAction;\n\npublic class PrivlegedOperations {\n\n\tPermission perm;\n\n\tObject f() {\n\t\tAccessController.checkPermission(perm);\n\t\treturn g();\n\t}\n\n\tObject g() {\n\t\tAccessController.checkPermission(perm);\n\t\treturn AccessController.doPrivileged(new PrivilegedAction<Object>() {\n\t\t\tpublic Object run() {\n\t\t\t\treturn h();\n\t\t\t}\n\t\t});\n\t}\n\n\tObject h() {\n\t\tAccessController.checkPermission(perm);\n\t\t// ...\n\t\treturn new Object();\n\t}\n\n\t/***************************************************************************************\n\t * Following is a variant of the g method above that allows the arument of a\n\t * specific context\n\t */\n\tAccessControlContext customContext;\n\n\tObject gWithContext() {\n\t\tAccessController.checkPermission(perm);\n\t\treturn AccessController.doPrivileged(new PrivilegedAction<Object>() {\n\t\t\tpublic Object run() {\n\t\t\t\treturn h();\n\t\t\t}\n\t\t}, customContext);\n\t}\n\t\n\t/***************************************************************************************/\n\tObject gWithContextAndAllowsCheckedException() {\n\t\tAccessController.checkPermission(perm);\n\t\ttry {\n\t\t\treturn AccessController.doPrivileged(new PrivilegedExceptionAction<Object>() {\n\t\t\t\tpublic Object run() {\n\t\t\t\t\treturn h();\n\t\t\t\t}\n\t\t\t}, customContext);\n\t\t} catch (PrivilegedActionException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\n\t\treturn new Object();\n\t}\n\n}\n"],
        "id":"51e45a55-ec45-4a4b-bb03-d1f8befb79e0",
        "_version_":1632545525203992576},
      {
        "tag":["java i/o"],
        "title":["Byte and Char Reading"],
        "citation":["cert seure coding course"],
        "created":["20190503.1336"],
        "info":["package E_inputOutput;\n\nimport java.io.FileInputStream;\nimport java.io.IOException;\n\n\n/**\n * Apparently, the string 'FF' can trick the check for EOF (end-of-file or stream).\n */\npublic class ByteAndCharReading {\n\n\t@SuppressWarnings(\"null\")\n\tvoid badExample() throws IOException { // Example here incorrectly truncates to a byte (from int)\n\t\tFileInputStream in = null;\n\t\tbyte data;\n\t\twhile ((data = (byte) in.read()) != -1)\n\t\t\tSystem.out.print(data);\n\t}\n\t\n\t@SuppressWarnings(\"null\")\n\tvoid goodExample() throws IOException {\t// Example here correctly reads first, then casts to a byte for further evaluation\t\n\t\tFileInputStream in = null;\n\t\tint inbuff;\n\t\tbyte byteData;\n\t\tchar charData;\n\t\t\n\t\t/** Same idea here for chars and bytes, you need to cast from int buffer for proper evluation */\n\t\twhile ((inbuff = in.read()) != -1) {\n\t\t\tbyteData = (byte) inbuff;\n\t\t\tcharData = (char) inbuff;\n\t\t\tSystem.out.println(byteData);\n\t\t\tSystem.out.println(charData);\n\t\t}\n\t}\n}\n"],
        "id":"633f5424-be86-4cfb-8396-cb95cfb02210",
        "_version_":1632544599329210368},
      {
        "tag":["java cert"],
        "title":["Path Canonicalization"],
        "citation":["cert secure coding course"],
        "created":["20190503.1330"],
        "info":["\n\n\t/**\n\t * Compliant Path Canonicalization Example\n\t */\n\tpublic static void good(String[] args) throws Exception {\n\t\tFile f = new File(System.getProperty(\"user.home\") + System.getProperty(\"file.separator\") + args[0]);\n\t\tString canonPath = f.getCanonicalPath();\n\t\tif (!isInSecureDir(Paths.get(canonPath))) {\n\t\t\tthrow new IllegalArgumentException();\n\t\t}\n\t\tif (!validate(canonPath)) {\n\t\t\t// Validation\n\t\t\tthrow new IllegalArgumentException();\n\t\t}\n\t}"],
        "id":"ffb59dcb-9f7c-4c37-9f45-3b6c1a129f27",
        "_version_":1632544179521323008},
      {
        "tag":["reference"],
        "title":["Git Cheat Sheet"],
        "updated":["20190514.0957"],
        "created":["20190506.1437"],
        "id":"dd969e22-ee30-4664-a726-8f469493bc4e",
        "info":["Terms\n\t'head' = the branch you currently have checked out\n\t'origin' == ?? (remote repository from which the current was cloned)\n\nGeneral Info\n\t'git help ????' = will open an html man page for the wildcard concept, works for any concept\n\t'git help glossary' = opens glossary page for all terms, concepts, usage, etc... for git\n\t'git log' = list version history for branch\n\t'git log --follow filename.java' = list history for a single file, including renames\n\t'git reflog' = history of when the tips of branches and other references were updated in the local repository\n\nConfiguration\n\t'git config --list'\n\t'git config --global user.name \"That Guy\"' = sets username for commits and other related references\n\t'git config --global user.email \"thatguy@someplace.com\"' = sets email for commits/visibility\n\t'git config --global color.ui false' = supposed to turn off console coloring\n\t'git config --global core.safecrlf false' = supposed to turn off the repetitive warning on console for CRLF line endings\n\t'git config --global core.editor \"'c:/program files/sublime text 3/subl.exe' -w\"' = associates sublime as commitment editor (to avoid using the vi-like rainbow-colored command window)\n\t'git config --global commit.template ~/.gitmessage.txt' = applies the conent of the text file as the default commmit message\n \t'git config --global alias.unstage 'reset --'' = set an alias for common actions\n\n \tRemove most color from terminal by adding the following to ~/.gitconfig:\n\n \t[color]    \n\t    ui = false\n\t    branch = false\n\t    diff = false\n\t    interactive = false\n\t    status = false\n\t    log = false\n\nProject Management\n\t'git clone https://thatguy-somewhere@bitbucket.org/company/fixtheworkd.git destinationFolder' = clones a repository to a custom-named folder (will not work for non-empty folders)\t\n\n\t**Following command sequence necessary to checkout code into a non-empty dir or where git already initiated:\n\t\t'git init'\t\t\t(only if not yet initialized)\n\t\t'git remote add origin PATH/TO/REPO'\n\t\t'git fetch'\n\t\t'git checkout -t origin/master'\n\nBranching\n\t'git branch' = show local branches, * next to active branch\n\t'git branch -a' = shows all branches, local and remote\n\t'git checkout -b someNewLocalBranch' = creates (and changes to) a new local branch by the given name\n\t'git push --set-upstream origin someNewLocalBranch' = sets (and creates if necessary) the remote branch to push to\n\t'git branch --set-upstream-to=origin/<branch> master' = sets a given (checked-out) branch upstream destination\n\t'git branch -D branchName' = deletes a particular branch\n\t'git push origin --delete feature/login' = deletes a remote branch\n\nManaging Change Sets\n\t'git commit --amend' = alter the commit message of the last commit\n\t'git stash list' = list all stashes\n\t'git stash pop' = apply the stash on the top of the stack\n\t'git stash save \"this is a comment for the stash\"' = make a stash and apply a comment\n\t'git stash drop stash@{1}' = remove stash by name\n\nMerging\n\t'git cherry-pick 91e91f1ad' = will commit the change indicated by the hash into the branch that is currently checked out\n\nConflicts\n  'git mergetool' = assuming there's an existing conflict, this will open the configured tool to resolve the conflict\n\nReverting/Unstage\n\t'git clean -xfd' = does a force delete of all untracked files and directories, also ignores the .ignore settings (so ignored files will also be deleted)  \n\t'git revert 4945db2' = reverts changes from a specific commit\n\t'git revert HEAD~3' = Revert the changes specified by the fourth last commit in HEAD and create a new commit with the reverted changes.\n\t'git revert -n master~5..master~2' = Revert the changes done by commits from the fifth last commit in master (included) to the third last commit in \n\t\tmaster (included), but do not create any commit with the reverted changes. The revert only modifies the working tree and the index.\n\n\t'git checkout someFile' = revert any locally made changes to a given file\n\t'git checkout -- PolicyCenter903/some/file/you/want/back/to/revert' = will revert at the file level\n\t'git reset HEAD <file>...\" =  to unstage a given file\n\t'git push origin anthonysBranch --force' = forces push to remote, ignoring fast-forward errors (overwrites, deletes, etc.); may be helpful in undoing pushed commits\n\n\t** When all else not working, try:\n\t\t'git reset -- someFile'\n  \t\t'git checkout sameFile'\n\nSearching/Viewing:\n\t'git diff-tree --no-commit-id --name-only -r bd61ad98' = lists all files in a given commit\n\t'git diff branch_1..branch_2' = produce the diff between the tips of the two branches\n\t'git diff branch_1...branch_2' = find the diff from common ancestor of 2 branches, use three dots\n\t'git log --diff-filter=D --summary' = lists all deleted files throughout the change history, grouped by commit\n\t'git log --author=Anthony' = return all commits where Anthony is in the author attribute; Add --all if you intend to search all branches and not just the current commit's ancestors in your repo.\n\t'git grep -n someFunctionOrWhatever' = search for cases of the string and include line numbers in output (similar to 'real' grep)\n\t'git grep --count someString' = rollup count of instances per file\n\t'git log -SZLIB_BUF_MAX --oneline' = If we want to find out for example when the ZLIB_BUF_MAX constant was originally introduced, \n\t\twe can tell Git to only show us the commits that either added or removed that string with the -S option.\n\nPull Requests:\n\tTo diff a specific pull request locally (https://github.com/github/hub/issues/631):\n\t\t$ git fetch origin \"+refs/heads/master:refs/remotes/origin/master\" \"+refs/pull/42/head:refs/pr/42\"\n\t\t$ git difftool \"$(git merge-base origin/master pr/42)\" pr/42\n\t\tThis, of course, wouldn't work if the base branch for #42 was something other than \"master\". But you get the gist.\n\n\n*************************************************************************************************************************** BELOW IS JUST USAGE OUTPUT FROM GIT COMMAND LINE \n            C:\\copperpoint.space\\gitcopperpoint\\gw7>git help\n            usage: git [--version] [--help] [-C <path>] [-c name=value]\n                       [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n                       [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]\n                       [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n                       <command> [<args>]\n\n            These are common Git commands used in various situations:\n\n            start a working area (see also: git help tutorial)\n               clone      Clone a repository into a new directory\n               init       Create an empty Git repository or reinitialize an existing one\n\n            work on the current change (see also: git help everyday)\n               add        Add file contents to the index\n               mv         Move or rename a file, a directory, or a symlink\n               reset      Reset current HEAD to the specified state\n               rm         Remove files from the working tree and from the index\n\n            examine the history and state (see also: git help revisions)\n               bisect     Use binary search to find the commit that introduced a bug\n               grep       Print lines matching a pattern\n               log        Show commit logs\n               show       Show various types of objects\n               status     Show the working tree status\n\n            grow, mark and tweak your common history\n               branch     List, create, or delete branches\n               checkout   Switch branches or restore working tree files\n               commit     Record changes to the repository\n               diff       Show changes between commits, commit and working tree, etc\n               merge      Join two or more development histories together\n               rebase     Reapply commits on top of another base tip\n               tag        Create, list, delete or verify a tag object signed with GPG\n\n            collaborate (see also: git help workflows)\n               fetch      Download objects and refs from another repository\n               pull       Fetch from and integrate with another repository or a local branch\n               push       Update remote refs along with associated objects\n            \n            'git help -a' and 'git help -g' list available subcommands and some concept guides. See 'git help <command>' or 'git help <concept>'\n              to read about a specific subcommand or concept.\n"],
        "_version_":1633527303499677696},
      {
        "tag":["java"],
        "title":["Jenkins Build Script"],
        "updated":["20190507.1544"],
        "citation":["copperpoint applications"],
        "created":["20190507.1355"],
        "id":"0006a782-9630-4288-a81a-8550a920c167",
        "info":["import java.text.SimpleDateFormat\nnode {\n env.ForEmailPlugin = env.WORKSPACE\n try {\n  timestamps {\n    env.JAVA_HOME = \"${tool 'JDK8'}\"\n    env.ANT_HOME = \"${tool 'ANT1.10'}\"\n    def date = new Date()\n    def dateFormat = new SimpleDateFormat(\"yyyyMMdd-HHmm\")\n    def DT = dateFormat.format(date)\n        \n    ws('E:\\\\workspace\\\\GWR9PCBC\\\\BuildBranch') {\n        stage('Checkout') {\n           \n           dir('BillingCenter\\\\modules\\\\configuration') {\n                git branch: '${BRANCH}', credentialsId: 'afd2789e-e407-4dd5-bc93-c984954ffce2', url: 'https://bitbucket.org/copperpoint/billingcenter905configs.git'\n            }\n           \n            dir('PolicyCenter\\\\modules\\\\configuration') {\n                git branch: '${BRANCH}', credentialsId: 'afd2789e-e407-4dd5-bc93-c984954ffce2', url: 'https://bitbucket.org/copperpoint/policycenter905configs.git'\n            }\n            \n            dir('CPMIGWIntegration') {\n                git branch: '${BRANCH}', credentialsId: 'afd2789e-e407-4dd5-bc93-c984954ffce2', url: 'https://bitbucket.org/copperpoint/cpmigwintegrationpcbcv9.git'\n            }\n        }\n        stage('BuildWars') {\n           parallel BillingCenter: {  \n                    dir ('BillingCenter') {\n                        bat returnStatus: true, script: 'gwb.bat clean'\n                        bat returnStatus: true, script: 'gwb.bat genJavaApi'\n                        bat returnStatus: true, script: \"@echo customer.build=$BRANCH.$DT > modules\\\\configuration\\\\res\\\\customer-version.properties\"\n                        bat returnStatus: true, script: 'gwb.bat warJbossJndi -DincludeDictionary=true'\n                    }    \n                }, PolicyCenter: { \n                    dir ('PolicyCenter') {\n                        bat returnStatus: true, script: 'gwb.bat clean'\n                        bat returnStatus: true, script: \"@echo customer.build=$BRANCH.$DT > modules\\\\configuration\\\\res\\\\customer-version.properties\"\n                        bat returnStatus: true, script: 'gwb.bat warJbossJndi -DincludeDictionary=true'\n                    }\n                },\n                failFast: true \n             \n            withAnt(installation: 'ANT1.10') {\n                dir('CPMIGWIntegration') {\n                    bat returnStatus: true, script: 'ant -f build.xml jar'\n                    bat returnStatus: true, script: 'ant -f build.xml gen-batch'\n                }\n            }\n            \n        }\n        stage('Release Notes') {\n            \n            dir ('BillingCenter\\\\dist\\\\wars\\\\JbossJndi') {\n                bat 'mkdir releases'\n                bat 'copy E:\\\\workspace\\\\ReleaseNotes\\\\indexBC.xsl releases\\\\index.xsl'\n            }\n            dir ('BillingCenter\\\\modules\\\\configuration') {\n                bat 'echo ^<?xml version = \"1.0\"?^> > E:\\\\workspace\\\\GWR9PCBC\\\\BuildBranch\\\\BillingCenter\\\\dist\\\\wars\\\\JbossJndi\\\\releases\\\\index.xml'\n                bat 'echo ^<?xml-stylesheet type = \"text/xsl\" href = \"index.xsl\"?^> >> E:\\\\workspace\\\\GWR9PCBC\\\\BuildBranch\\\\BillingCenter\\\\dist\\\\wars\\\\JbossJndi\\\\releases\\\\index.xml'\n                bat 'echo ^<log^> >> E:\\\\workspace\\\\GWR9PCBC\\\\BuildBranch\\\\BillingCenter\\\\dist\\\\wars\\\\JbossJndi\\\\releases\\\\index.xml'\n                bat 'echo ^<branch^>%BRANCH%^</branch^> >> E:\\\\workspace\\\\GWR9PCBC\\\\BuildBranch\\\\BillingCenter\\\\dist\\\\wars\\\\JbossJndi\\\\releases\\\\index.xml'        \n                bat '\"E:\\\\Program Files (x86)\\\\Git\\\\bin\\\\git.exe\" log --grep=\"%BRANCH%\" --no-merges --date=short --reverse --pretty=format:\"<logEntry><link><a href=\\'https://bitbucket.org/copperpoint/billingcenter905configs/commits/%%H?at=%BRANCH%\\'>%%h</a></link><author>%%an</author><msg><![CDATA[%%s]]></msg><date>%%cd</date></logEntry>\" >> E:\\\\workspace\\\\GWR9PCBC\\\\BuildBranch\\\\BillingCenter\\\\dist\\\\wars\\\\JbossJndi\\\\releases\\\\index.xml'\n                bat 'echo ^</log^> >> E:\\\\workspace\\\\GWR9PCBC\\\\BuildBranch\\\\BillingCenter\\\\dist\\\\wars\\\\JbossJndi\\\\releases\\\\index.xml'\n            }\n            dir ('BillingCenter\\\\dist\\\\wars\\\\JbossJndi') {\n                bat 'jar uvf bc.war releases/*'\n            }\n            dir ('PolicyCenter\\\\dist\\\\wars\\\\JbossJndi') {\n                bat 'mkdir releases'\n                bat 'copy E:\\\\workspace\\\\ReleaseNotes\\\\indexPC.xsl releases\\\\index.xsl'\n            }\n            dir ('PolicyCenter\\\\modules\\\\configuration') {\n                bat 'echo ^<?xml version = \"1.0\"?^> > E:\\\\workspace\\\\GWR9PCBC\\\\BuildBranch\\\\PolicyCenter\\\\dist\\\\wars\\\\JbossJndi\\\\releases\\\\index.xml'\n                bat 'echo ^<?xml-stylesheet type = \"text/xsl\" href = \"index.xsl\"?^> >> E:\\\\workspace\\\\GWR9PCBC\\\\BuildBranch\\\\PolicyCenter\\\\dist\\\\wars\\\\JbossJndi\\\\releases\\\\index.xml'\n                bat 'echo ^<log^> >> E:\\\\workspace\\\\GWR9PCBC\\\\BuildBranch\\\\PolicyCenter\\\\dist\\\\wars\\\\JbossJndi\\\\releases\\\\index.xml'\n                bat 'echo ^<branch^>%BRANCH%^</branch^> >> E:\\\\workspace\\\\GWR9PCBC\\\\BuildBranch\\\\PolicyCenter\\\\dist\\\\wars\\\\JbossJndi\\\\releases\\\\index.xml'        \n                bat '\"E:\\\\Program Files (x86)\\\\Git\\\\bin\\\\git.exe\" log --grep=\"%BRANCH%\" --no-merges --date=short --reverse --pretty=format:\"<logEntry><link><a href=\\'https://bitbucket.org/copperpoint/policycenter905configs/commits/%%H?at=%BRANCH%\\'>%%h</a></link><author>%%an</author><msg><![CDATA[%%s]]></msg><date>%%cd</date></logEntry>\" >> E:\\\\workspace\\\\GWR9PCBC\\\\BuildBranch\\\\PolicyCenter\\\\dist\\\\wars\\\\JbossJndi\\\\releases\\\\index.xml'\n                bat 'echo ^</log^> >> E:\\\\workspace\\\\GWR9PCBC\\\\BuildBranch\\\\PolicyCenter\\\\dist\\\\wars\\\\JbossJndi\\\\releases\\\\index.xml'\n            }\n            dir ('PolicyCenter\\\\dist\\\\wars\\\\JbossJndi') {\n                bat 'jar uvf pc.war releases/*'\n            }\n        }\n        \n        stage('Archive') {\n            bat returnStatus: true, script: \"mkdir E:\\\\workspace\\\\Branch\\\\${BRANCH} 2>NUL\"\n            bat returnStatus: true, script: \"copy BillingCenter\\\\dist\\\\wars\\\\JbossJndi\\\\bc.war E:\\\\workspace\\\\Branch\\\\${BRANCH}\\\\.\"\n            bat returnStatus: true, script: \"copy PolicyCenter\\\\dist\\\\wars\\\\JbossJndi\\\\pc.war E:\\\\workspace\\\\Branch\\\\${BRANCH}\\\\.\"\n            bat returnStatus: true, script: \"copy CPMIGWIntegration\\\\batchJobs.zip E:\\\\workspace\\\\Branch\\\\${BRANCH}\\\\.\"\n            \n            manager.addShortText(\"${BRANCH}\")\n        }\n    } // ws\n  } // timestamps\n } // try \n catch (err) {\n    currentBuild.result = 'FAILURE' \n    emailext body: 'GWV9 BuildBranch Pipeline Failed', \n        subject: 'GWV9 BuildBranch Pipeline Failed', \n        to: 'bdenney@copperpoint.com' \n }\n} // node"],
        "_version_":1632915120487137280},
      {
        "tag":["reference"],
        "title":["Regular Expression Cheat Sheet"],
        "updated":["20190514.0956"],
        "created":["20190502.1403"],
        "info":["*\t\tMatch zero, one or more of the previous\tAh* matches \"Ahhhhh\" or \"A\"\n?\t\tMatch zero or one of the previous\tAh? matches \"Al\" or \"Ah\"\n+\t\tMatch one or more of the previous\tAh+ matches \"Ah\" or \"Ahhh\" but not \"A\"\n\\\t\tUsed to escape a special character\tHungry\\? matches \"Hungry?\"\n.\t\tWildcard character, matches any character\tdo.* matches \"dog\", \"door\", \"dot\", etc.\n( )\t\tGroup characters\tSee example for |\n[ ]\t\tMatches a range of characters\t[cbf]ar matches \"car\", \"bar\", or \"far\"\n[0-9]+ \tmatches any positive integer\n[a-zA-Z] \tmatches ascii letters a-z (uppercase and lower case)\n[^0-9] \tmatches any character not 0-9.\n|\t\tMatche previous OR next character/group\t(Mon)|(Tues)day matches \"Monday\" or \"Tuesday\"\n{ }\t\tMatches a specified number of occurrences of the previous\t[0-9]{3} matches \"315\" but not \"31\"\n[0-9]{2,4} \tmatches \"12\", \"123\", and \"1234\"\n[0-9]{2,} \tmatches \"1234567...\"\n^\t\tBeginning of a string. Or within a character range [] negation.\t^http matches strings that begin with http, such as a url.\n[^0-9] \tmatches any character not 0-9.\n$\t\tEnd of a string.\ting$ matches \"exciting\" but not \"ingenious\"\n\nExamples:\nhello =\t\t\t\tcontains {hello}\ngray|grey =\t\t\tcontains {gray, grey}\ngr(a|e)y = \t\t\tcontains {gray, grey}\ngr[ae]y\t= \t\t\tcontains {gray, grey}\nb[aeiou]bble = \t\tcontains {babble, bebble, bibble, bobble, bubble}\n[b-chm-pP]at|ot =\tcontains {bat, cat, hat, mat, nat, oat, pat, Pat, ot}\ncolou?r\t= \t\t\tcontains {color, colour}\nrege(x(es)?|xps?) = contains {regex, regexes, regexp, regexps}\ngo*gle = \t\t\tcontains {ggle, gogle, google, gooogle, goooogle, ...}\ngo+gle\t\t\t\tcontains {gogle, google, gooogle, goooogle, ...}\ng(oog)+le = \t\tcontains {google, googoogle, googoogoogle, googoogoogoogle, ...}\nz{3} = \t\t\t\tcontains {zzz}\nz{3,6} = \t\t\tcontains {zzz, zzzz, zzzzz, zzzzzz}\nz{3,} = \t\t\tcontains {zzz, zzzz, zzzzz, ...}\n[Bb]rainf\\*\\*k = \tcontains {Brainf**k, brainf**k}\n\\d = \t\t\t\tcontains {0,1,2,3,4,5,6,7,8,9}\n\\d{5}(-\\d{4})? = \tcontains a United States zip code\n1\\d{10}\t= \t\t\tcontains an 11-digit string starting with a 1\n[2-9]|[12]\\d|3[0-6]\t= contains an integer in the range 2..36 inclusive\nHello\\nworld = \t\tcontains Hello followed by a newline followed by world\nmi.....ft =\t\t\tcontains a nine-character (sub)string beginning with mi and ending with ft (Note: depending on context, the dot stands either for “any character at all” or “any character except a newline”.) Each dot is allowed to match a different character, so both microsoft and minecraft will match.\n\\d+(\\.\\d\\d)? = \t\tcontains a positive integer or a floating point number with exactly two characters after the decimal point.\n[^i*&2@] = \t\t\tcontains any character other than an i, asterisk, ampersand, 2, or at-sign.\n//[^\\r\\n]*[\\r\\n] = contains a Java or C# slash-slash comment\n^dog = \t\t\t\tbegins with \"dog\"\ndog$ = \t\t\t\tends with \"dog\"\n^dog$ = \t\t\tis exactly \"dog\"\n"],
        "id":"32c151b9-e7ce-445a-8e41-cb7e614fa177",
        "_version_":1633527282295373824},
      {
        "tag":["powershell remote"],
        "title":["Jenkins Pipeline DSL Scripted"],
        "updated":["20190507.1355"],
        "citation":["copperpoint batch execution"],
        "created":["20190507.1312"],
        "info":["node {\n    stage('RunBatches'){\n        powershell '''\n        $computer = 'gwrivwas002.copperpoint.com'\n        $classname = $env:CLASSNAME\n        $arg = $env:ARG\n        \n        Write-Host \"SERVER: $computer\"\n        Write-Host \"Java Class: $classname\"\n        Write-Host \"Argument: $arg\"\n        \n        $password = Get-Content \\'E:\\\\admin\\\\secure\\\\jenkins.cred\\' | ConvertTo-SecureString -key (get-content \\'E:\\\\admin\\\\secure\\\\aes.key\\')\n        $username = \"sv-jenkins@copperpoint.com\"\n        $cred = New-Object System.Management.Automation.PSCredential ($username,$password)\n    \n        $sess = New-PSSession -ComputerName $computer  -Credential $cred -Authentication Credssp\n        Get-PSSession | Format-List\n        try \n            {\n            Invoke-Command -Session $sess -ScriptBlock {\n                Set-Location -Path \\'E:\\\\Guidewire\\\\Integrations\\\\batch\\\\CPMIGWIntegration\\\\dist'\n                \n                java \"-Dgw.pc.env=gwrint\" \"-Dgw.bc.env=gwrint\" -cp '.\\\\CPMIGWIntegration.jar;..\\\\lib\\\\*;..\\\\..\\\\BillingCenter\\\\java-api\\\\lib\\\\*' $using:classname $using:arg \n            }\n        } catch {\n            Write-Host \"Caught an Exception!\"\n            exit 1\n        }\n        Get-PSSession | Remove-PSSession'''\n        \n    }\n}"],
        "id":"12695584-3b15-4941-9e50-10104bb72fa0",
        "_version_":1632908118539108352},
      {
        "tag":["RNN "],
        "title":["Recurrent Neural Networks"],
        "citation":["https://machinelearningmastery.com/when-to-use-mlp-cnn-and-rnn-neural-networks/"],
        "created":["20190509.1542"],
        "info":["* designed to work with sequence prediction problems (one-to-many, many-to-one, many-to-many)\n* Many-to-Many problem is often referred to as sequence-to-sequence, or seq2seq for short.\n* Long Short-Term Memory, or LSTM, network is perhaps the most successful RNN because it overcomes the problems \n\tof training a recurrent network and in turn has been used on a wide range of applications\n* best for natural language processing, Text data, Speech data, Classification prediction problems, Regression prediction problems, Generative models"],
        "id":"7ede1e8d-285d-4e8d-ae17-17bbe2ceb979",
        "_version_":1633096530599608320},
      {
        "tag":["open source machine learning java dl4j"],
        "title":["Thoughts on deeplearning4j"],
        "created":["20190509.1126"],
        "info":["* has some kind of affilitation with Eclipse\n* what i'm not liking is the suggest to use maven and intellij\n* having to dig dependencies out of maven.org\n* driven by Skymind corp"],
        "id":"7c1093ad-d558-4605-a36a-2594dd6969c4",
        "_version_":1633080452438818816},
      {
        "title":["Deep Learning"],
        "created":["20190509.1553"],
        "info":["* a subfield of machine learning concerned with algorithms inspired by the structure and function of the brain called artificial neural networks\n* examples are convolutional networks, recurrent networks, etc.."],
        "id":"e69ca3db-4c8d-46af-a36d-9ae0055a8eb1",
        "_version_":1633096815863660544},
      {
        "tag":["CNN deep learning"],
        "title":["Convoluational Neural Network"],
        "created":["20190509.1550"],
        "info":["* designed to map image data to an output variable"],
        "id":"95129600-115d-44b2-9c51-968761e9db99",
        "_version_":1633096738123284480},
      {
        "tag":["cli cheat reference"],
        "title":["Windows Commands"],
        "updated":["20190514.1126"],
        "citation":["https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/windows-commands"],
        "created":["20190514.0958"],
        "id":"fc374b12-29a6-45b1-8101-49c7462cbeab",
        "info":["fciv gw-entity-cc.jar -both = checksum utility (by download), output is both md5 and sha\nwmic Path win32_process Where \"CommandLine Like '%BillingCenter%'\" Call Terminate = kill a particular set of processes by query to command line\n\nA\nappend\narp\nassoc\nat\natmadm\nattrib\nauditpol\nautochk\nautoconv\nautofmt\nB\nbcdboot\nbcdedit\nbdehdcfg\nbitsadmin\nbitsadmin addfile\nbitsadmin addfileset\nbitsadmin addfilewithranges\nbitsadmin cancel\nbitsadmin complete\nbitsadmin create\nbitsadmin getaclflags\nbitsadmin getbytestotal\nbitsadmin getbytestransferred\nbitsadmin getcompletiontime\nbitsadmin getcreationtime\nbitsadmin getdescription\nbitsadmin getdisplayname\nbitsadmin geterror\nbitsadmin geterrorcount\nbitsadmin getfilestotal\nbitsadmin getfilestransferred\nbitsadmin getminretrydelay\nbitsadmin getmodificationtime\nbitsadmin getnoprogresstimeout\nbitsadmin getnotifycmdline\nbitsadmin getnotifyflags\nbitsadmin getnotifyinterface\nbitsadmin getowner\nbitsadmin get priority\nbitsadmin getproxybypasslist\nbitsadmin getproxylist\nbitsadmin getproxyusage\nbitsadmin getreplydata\nbitsadmin getreplyfilename\nbitsadmin getreplyprogress\nbitsadmin getstate\nbitsadmin gettype\nbitsadmin help\nbitsadmin info\nbitsadmin list\nbitsadmin listfiles\nbitsadmin monitor\nbitsadmin nowrap\nbitsadmin rawreturn\nbitsadmin removecredentials\nbitsadmin replaceremoteprefix\nbitsadmin reset\nbitsadmin resume\nbitsadmin setaclflag\nbitsadmin setcredentials\nbitsadmin setdescription\nbitsadmin setdisplayname\nbitsadmin setminretrydelay\nbitsadmin setnoprogresstimeout\nbitsadmin setnotifycmdline\nbitsadmin setnotifyflags\nbitsadmin setpriority\nbitsadmin setproxysettings\nbitsadmin setreplyfilename\nbitsadmin suspend\nbitsadmin takeownership\nbitsadmin Transfer\nbitsadmin util\nbitsadmin wrap\nbootcfg\nbootcfg addsw\nbootcfg copy\nbootcfg dbg1394\nbootcfg debug\nbootcfg default\nbootcfg delete\nbootcfg ems\nbootcfg query\nbootcfg raw\nbootcfg rmsw\nbootcfg timeout\nbreak\nC\ncacls\ncall = Calls one batch program from another without stopping the parent batch program. The call command accepts labels as the target of the call.\ncd\ncertreq\ncertutil\nchange\nchange logon\nchange port\nchange user\nchcp\nchdir\nchglogon\nchgport\nchgusr\nchkdsk\nchkntfs\nchoice\ncipher\nclip\ncls\nCmd\ncmdkey\ncmstp\ncolor\ncomp\ncompact\nconvert\ncopy\ncprofile\ncscript\nD\ndate\ndcgpofix\ndefrag\ndel\ndfsrmig\ndiantz\ndir\ndiskcomp\ndiskcopy\ndiskpart\ndiskperf\ndiskraid\ndiskshadow\ndispdiag\ndnscmd\ndoskey\ndriverquery\nE\necho\nedit\nendlocal\nerase\neventcreate\neventquery\neventtriggers\nevntcmd\nexit\nexpand\nextract\nF\nfc\nfind\nfindstr\nfinger\nflattemp\nfondue\nfor\nforfiles\nformat\nfreedisk\nfsutil\nfsutil 8dot3name\nfsutil behavior\nfsutil file\nfsutil fsinfo\nfsutil hardlink\nfsutil objectid\nfsutil quota\nfsutil repair\nfsutil reparsepoint\nfsutil resource\nfsutil sparse\nfsutil tiering\nfsutil transaction\nfsutil usn\nfsutil volume\nfsutil wim\nftp\nftype\nfveupdate\nG\ngetmac\ngettype\ngoto\ngpfixup\ngpresult\ngpupdate\ngraftabl\nH\nhelp\nhelpctr\nhostname\nI\nicacls\nif\ninuse\nipconfig\nipxroute\nirftp\nJ\njetpack\nK\nklist\nksetup\nksetup:setrealm\nksetup:mapuser\nksetup:addkdc\nksetup:delkdc\nksetup:addkpasswd\nksetup:delkpasswd\nksetup:server\nksetup:setcomputerpassword\nksetup:removerealm\nksetup:domain\nksetup:changepassword\nksetup:listrealmflags\nksetup:setrealmflags\nksetup:addrealmflags\nksetup:delrealmflags\nksetup:dumpstate\nksetup:addhosttorealmmap\nksetup:delhosttorealmmap\nksetup:setenctypeattr\nksetup:getenctypeattr\nksetup:addenctypeattr\nksetup:delenctypeattr\nktmutil\nktpass\nL\nlabel\nlodctr\nlogman\nlogman create\nlogman query\nlogman start &124; stop\nlogman delete\nlogman update\nlogman import &124; export\nlogoff\nlpq\nlpr\nM\nmacfile\nmakecab\nmanage-bde\nmanage-bde: status\nmanage-bde: on\nmanage-bde: off\nmanage-bde: pause\nmanage-bde: resume\nmanage-bde: lock\nmanage-bde: unlock\nmanage-bde: autounlock\nmanage-bde: protectors\nmanage-bde: tpm\nmanage-bde: setidentifier\nmanage-bde: ForceRecovery\nmanage-bde: changepassword\nmanage-bde: changepin\nmanage-bde: changekey\nmanage-bde: KeyPackage\nmanage-bde: upgrade\nmanage-bde: WipeFreeSpace\nmapadmin\nMd\nmkdir\nmklink\nmmc\nmode\nmore\nmount\nmountvol\nmove\nmqbkup\nmqsvc\nmqtgsvc\nmsdt\nmsg\nmsiexec\nmsinfo32\nmstsc\nN\nnbtstat\nnetcfg\nnetsh\nnetstat = Displays active TCP connections, ports on which the computer is listening, Ethernet statistics, the IP routing table, IPv4 statistics (for the IP, ICMP, TCP, and UDP protocols), and IPv6 statistics (for the IPv6, ICMPv6, TCP over IPv6, and UDP over IPv6 protocols). Used without parameters, netstat displays active TCP connections.\nNet print\nnfsadmin\nnfsshare\nnfsstat\nnlbmgr\nnslookup\nnslookup exit command\nnslookup finger command\nnslookup help\nnslookup ls\nnslookup lserver\nnslookup root\nnslookup server\nnslookup set\nnslookup set all\nnslookup set class\nnslookup set d2\nnslookup set debug\nnslookup set domain\nnslookup set port\nnslookup set querytype\nnslookup set recurse\nnslookup set retry\nnslookup set root\nnslookup set search\nnslookup set srchlist\nnslookup set timeout\nnslookup set type\nnslookup set vc\nnslookup view\nntbackup\nntcmdprompt\nntfrsutl\nO\nopenfiles\nP\npagefileconfig\npath\npathping\npause\npbadmin\npentnt\nperfmon\nping\npnpunattend\npnputil\npopd\nPowerShell\nPowerShell_ise\nprint\nprncnfg\nprndrvr\nprnjobs\nprnmngr\nprnport\nprnqctl\nprompt\npubprn\npushd\npushprinterconnections\nQ\nqappsrv\nqprocess\nquery\nquser\nqwinsta\nR\nrcp = copy files between machines, deprecated\nrd\nrdpsign\nrecover\nreg\nreg add\nreg compare\nreg copy\nreg delete\nreg export\nreg import\nreg load\nreg query\nreg restore\nreg save\nreg unload\nregini\nregsvr32\nrelog\nrem\nren\nrename\nrepair-bde\nreplace\nreset session\nrexec\nrisetup\nrmdir\nrobocopy\nroute_ws2008\nrpcinfo\nrpcping\nrsh\nrundll32\nrwinsta\nS\nschtasks\nscwcmd\nscwcmd: analyze\nscwcmd: configure\nscwcmd: register\nscwcmd: rollback\nscwcmd: transform\nscwcmd: view\nsecedit\nsecedit:analyze\nsecedit:configure\nsecedit:export\nsecedit:generaterollback\nsecedit:import\nsecedit:validate\nserverceipoptin\nServermanagercmd\nserverweroptin\nset\nsetlocal = Starts localization of environment variables in a batch file. Localization continues until a matching endlocal command is encountered or the end of the batch file is reached.\nsetx\nsfc\nshadow\nshift\nshowmount\nshutdown\nsort\nstart\nsubst = associates a path with a drive letter. If used without parameters, subst displays the names of the virtual drives in effect.\nsxstrace\nsysocmgr\nsysteminfo\nT\ntakeown\ntapicfg\ntaskkill\ntasklist\ntcmsetup\ntelnet\ntftp\ntime\ntimeout\ntitle\ntlntadmn\ntpmvscmgr\ntracerpt\ntracert\ntree\ntscon\ntsdiscon\ntsecimp\ntskill\ntsprof\ntype\ntypeperf\ntzutil\nU\nunlodctr\nV\nver\nverifier\nverify\nvol\nvssadmin-\nW\nwaitfor\nwbadmin\nwbadmin enable backup\nwbadmin disable backup\nwbadmin start backup\nwbadmin stop job\nwbadmin get versions\nwbadmin get items\nwbadmin start recovery\nwbadmin get status\nwbadmin get disks\nwbadmin start systemstaterecovery\nwbadmin start systemstatebackup\nwbadmin delete systemstatebackup\nwbadmin start sysrecovery\nwbadmin restore catalog\nwbadmin delete catalog\nwdsutil\nwecutil\nwevtutil\nwhere\nwhoami\nwinnt\nwinnt32\nwinpop\nwinrs\nwlbs\nwmic\nwscript\nX\nxcopy"],
        "_version_":1633533506177990656},
      {
        "title":["Language of the Month: Gosu"],
        "citation":["http://www.drdobbs.com/open-source/language-of-the-month-gosu/231001429"],
        "created":["20190605.1005"],
        "info":["By Scott McKinney, July 12, 2011 (creator and architect of Gosu and works on Gosu and Gosu-based tools at Guidewire.)\n\nA statically typed language with user-defined types? Functions that can be defined anywhere in the class path and applied to all downstream objects? Indeed! Gosu delivers unusual and powerful features\nThe development of Gosu began about nine years ago during the earliest stage of engineering at Guidewire Software. The language's humble origin sprang from an unsuccessful search for a scripting language as the basis for a rule engine we needed to build. Our language criteria didn't seem too demanding; but we were naive. First and foremost, the language had to be embeddable in the JVM and be compatible with leading application servers. It also had to be familiar — the vast majority of programmers are comfortable with imperative, object-oriented languages, and we wanted our scripting language to be the same. We also wanted a language with static typing, so that our customers could edit rules with instant parser feedback and we could provide modern features, such as deterministic code completion, navigation, etc. In addition, we needed to represent our ORM as a set of first-class types in the language, whether it be through code generation or meta-programming or what have you. Lastly, the entity types from our ORM needed to be individually configurable by our customers via custom methods and properties. To our dismay, all the serious scripting languages at that time were dynamically typed, which ruled them out. So began the development of Gosu (which is today an open-source language, available at http://gosu-lang.org).\n\nBy the time we had a working language, we started seeing it as a solution for rewriting our company's product UIs, our document management system, our Velocity-template systems; and each step exposed new features that were needed in the language. Of these, by far the most innovative aspect of Gosu is the open type system. Unlike other languages, Gosu's type system is statically extendable to external domains, whereby abstract types can be defined and exposed with first-class representation. This is a big deal and is what makes Gosu extremely vital to the success of our enterprise applications.\n\nAlthough the type system is what separates Gosu from other JVM languages, we made sure that as a language, Gosu did not suffer from the limitations of so many others. As Java developers, we were and remain to this day feature-starved relative to other languages. Microsoft's C#, for instance, had led the way with productivity boosting features, while Java stagnated or missed the mark. Thus, we borrowed heavily from C# and other languages. Along the way, Gosu picked up properties, type inference, reified (and simplified) generics, composition, closures, eval support, RAII, null-safety, and a host of other useful features. And as you'll soon see, Gosu's syntax is familiar to anyone with Java or C# experience.\n\nOne last bit of history involves Gosu's performance. Although Java as a language is showing its age, we can't knock it on performance — it's blazing fast and is still the leader of the pack. Other languages are gaining, but because most are dynamic (e.g., Groovy, JRuby, Jython), they have inherent limits with respect to performance and will never quite approach Java's. For instance, the bytecode they generate for a method call is unconventional and involves a lot of hoop jumping and sophisticated caching techniques. Although a lot of work has gone into the compilers of various dynamic languages, they'll never quite attain the performance of a virtual method call. Gosu was originally a semi-interpreted runtime, but it evolved to be fully bytecode compiled. And because it is statically typed, its compiler generates conventional bytecode, which keeps fair pace with Java. We have more work to do to make areas unique to the language perform even better, but we're comfortable with its performance on the whole."],
        "id":"901e1a17-4832-4068-bfce-bb58ab0ee61b",
        "_version_":1635521122177908736},
      {
        "tag":["cheat sheet hint"],
        "title":["Linux Command Reference"],
        "created":["20190531.2323"],
        "info":["seek/sniff >>>\n\tlocate someFile.txt\n\tegrep \n\tstrings binaryFile.mp3 = will print out character info to std out\n\nnetwork >>>\n\tip address = metadata on all network interfaces\n\tnmap -sP 192.168.1.1/24 = IPs from 192.168.1.1 thru 192.168.1.254 are scanned\n\tnmap -p 8083 192.168.1.9 = scan port on host, specifically\n\tnmap -F 192.168.1.9 = scan 100-most commonly used ports on a given host\n\thost someServer.com = another command that will dig up dns info (uses DNS)\n\tdig someServer.com = another command that will dig up dns info, server info, etc.\n\tnetcat localhost 22 = open tcp session to port 22 (ssh) for response\n\tnetcat -u www.google.com http = open udp session to port 80 on server\n\tscp myfile.txt cisco@someserver.com:/home/fella/dir = secure copy file as user to directory\n\tssh remote.machine.com = starts remove secure session to machine\n\tssh remote.machine.com who = runs command without logging in\n\nprocesses >>>\n\tw = list active processes for all users\n\tps -ef = process listing\n\ttop = live consumption listing\n\ttop -p 999 = consumption by pid\n\tfree -g = memory usage in gigs\n\tsudo kill processPID = kill signal\n\tsudo kill -9 processPID = hard kill\n\tsudo kill KILL processPID = hard kill\n\tsudo pkill tor = kill process by name\t\n\tkillall emacs = kills all processes for given program\n\tnice someProgram someInput = invoke process at priority level 10\n\trenice -n 5 -p 55811 = changes priority of running process to level 5\n\nfiles/permissions >>>\n\tln -s someFileThatExists.jpg nameOfLink = creates a symlink in cur directory to someFileThatExists...\n\tunlink nameOfLink = removes a symlink\n\tchmod 777 file.sh = changes mode for given file (user-group-other, in order)\n\tchown someUser someFile.txt = changes the user owner\n\tchgrp someGroup someFile.txt = changes the group owner\n\nsecurity >>>\n\tsudo ufw enable = enable the default firewall (universal firewall)\n\tgpg --list-keys\n\tsha256sum sensitiveFile.pdf = generate 256bit sum (also sha384sum and sha512sum, etc..)\n\ndownload >>>\n\twget -kpL http://www.npr.org/radStory.html = downloads target, flattened to 1 dir, urls modified for local viewing, relative links only, stylesheets, included\n\ninstallation >>>\n\tsudo apt-get install gufw = gui for universal firewall\n\tsudo apt-tet install vlc\n\tsudo apt-get install git=2.20.1 = installs a particular version\n\tsudo apt-get install deluge = torrent\n\tsudo apt-get install tor-browser\n\tsudo apt-get install seahorse = pgp tool\n\tsudo apt-get install keepassx\n\tsudo apt-get install nmap\n\tsudo apt-get install kid3 = mp3 tags\n\tsudo apt-get install flac\n\tsudo apt-get install ffmpeg = sound file conversion\n\tsudo apt-get install parallel = multi-core process distribution\n\tsudo apt-get install exfat-fuse = drivers for the exfat filesystem (microsoft proprietary)\n"],
        "id":"244a5129-bd2a-4815-880e-8d31e72f43f3",
        "_version_":1635124069158354944},
      {
        "tag":["artificial intelligence"],
        "title":["Google Open-Sources GPipe, a Library For Training Large Deep Neural"],
        "citation":["slashdot, venturebeat.com"],
        "created":["20190305.1154"],
        "info":["Google's AI research division today open-sourced GPipe, a library for \"efficiently\" training deep neural networks (layered functions modeled after neurons) under Lingvo, a TensorFlow framework for sequence modeling. It's applicable to any network consisting of multiple sequential layers, Google AI software engineer Yanping Huang said in a blog post, and allows researchers to \"easily\" scale performance. As Huang and colleagues explain in an accompanying paper (\"GPipe: Efficient Training of Giant Neural Networks using Pipeline Parallelism\"), GPipe implements two nifty AI training techniques. One is synchronous stochastic gradient descent, an optimization algorithm used to update a given AI model's parameters, and the other is pipeline parallelism, a task execution system in which one step's output is streamed as input to the next step.\n\nMost of GPipe's performance gains come from better memory allocation for AI models. On second-generation Google Cloud tensor processing units (TPUs), each of which contains eight processor cores and 64 GB memory (8 GB per core), GPipe reduced intermediate memory usage from 6.26 GB to 3.46GB, enabling 318 million parameters on a single accelerator core. Without GPipe, Huang says, a single core can only train up to 82 million model parameters. That's not GPipe's only advantage. It partitions models across different accelerators and automatically splits miniature batches (i.e., \"mini-batches\") of training examples into smaller \"micro-batches,\" and it pipelines execution across the micro-batches. This enables cores to operate in parallel, and furthermore accumulate gradients across the micro-batches, thereby preventing the partitions from affecting model quality."],
        "id":"a2f3e4d6-7996-484a-af56-3a37751f957f",
        "_version_":1635980850984124416},
      {
        "tag":["xml vulnerability exploit"],
        "title":["quadratic blowup entity expansion"],
        "citation":["https://docs.python.org/3/library/xml.html"],
        "created":["20190309.1227"],
        "info":["A quadratic blowup attack is similar to a Billion Laughs attack; it abuses entity expansion, too. Instead of nested entities it repeats one large entity with a couple of thousand chars over and over again. The attack isn’t as efficient as the exponential case but it avoids triggering parser countermeasures that forbid deeply-nested entities.\n"],
        "id":"bd3c4056-d34d-4d7a-8ec8-58dce778f501",
        "_version_":1635982947322429440},
      {
        "tag":["cli cheat"],
        "title":["Solr Command Reference"],
        "updated":["20190514.0957"],
        "created":["20190418.1159"],
        "info":["Start and Restart\n\nThe start command starts Solr. The restart command allows you to restart Solr while it is already running or if it has been stopped already.\n\nThe start and restart commands have several options to allow you to run in SolrCloud mode, use an example configuration set, start with a hostname or port that is not the default and point to a local ZooKeeper ensemble.\n\nbin/solr start [options]\n\nbin/solr start -help\n\nbin/solr restart [options]\n\nbin/solr restart -help\n"],
        "id":"f5b1d808-8d08-4632-87fa-45bc96d61323",
        "_version_":1633527365712740352},
      {
        "tag":["xml vulnerability exploit"],
        "title":["billion laughs / exponential entity expansion"],
        "citation":["https://docs.python.org/3/library/xml.html"],
        "created":["20190308.1226"],
        "info":["The Billion Laughs attack – also known as exponential entity expansion – uses multiple levels of nested entities. Each entity refers to another entity several times, and the final entity definition contains a small string. The exponential expansion results in several gigabytes of text and consumes lots of memory and CPU time.\n"],
        "id":"1f1c97cb-554b-49e6-a477-ac59f875a646",
        "_version_":1635982896178135040},
      {
        "tag":["xml vulnerability exploit"],
        "title":["external entity expansion"],
        "citation":["https://docs.python.org/3/library/xml.html"],
        "created":["20190310.1228"],
        "info":["Entity declarations can contain more than just text for replacement. They can also point to external resources or local files. The XML parser accesses the resource and embeds the content into the XML document.\n"],
        "id":"dda6b9ad-876e-421e-800f-1b755a297dbe",
        "_version_":1635983000351014912},
      {
        "tag":["tsql"],
        "title":["Working with dates"],
        "created":["20190523.1129"],
        "info":["select DATEDIFF(day, o.someTimestamp, o.laterTimestamp) from someObject o where o.createTime > '2015-11-01'"],
        "id":"feabed04-d1fd-47e4-91e3-c0fbf0004160",
        "_version_":1634348531446710272},
      {
        "tag":["gentoo security breach"],
        "title":["GitHub Gentoo Organization Hacked (gentoo.org)"],
        "created":["20190824.1354"],
        "info":["Posted by BeauHD on Thursday June 28, 2018 @07:10PM from the heads-up dept.\nLongtime Slashdot reader Chutzpah shares a report from Gentoo Linux, a Linux distribution built using the Portage package management system: June 28 at approximately 20:20 UTC unknown individuals have gained control of the Github Gentoo organization, and modified the content of repositories as well as pages there. We are still working to determine the exact extent and to regain control of the organization and its repositories. All Gentoo code hosted on GitHub should for the moment be considered compromised.\n\nThis does NOT affect any code hosted on the Gentoo infrastructure. Since the master Gentoo ebuild repository is hosted on our own infrastructure and since Github is only a mirror for it, you are fine as long as you are using rsync or webrsync from gentoo.org. Details are sparse, but we will update this story once we learn more."],
        "id":"95a1ee62-1579-4d4e-9338-3f7f6810546a",
        "_version_":1642783148831932416},
      {
        "tag":["interview"],
        "title":["Application Development Architect"],
        "updated":["20190827.2034"],
        "created":["20190827.1711"],
        "info":["* just got out of interview with Kathy Omalley (AVP) and Jeff Devin(web team manager)\n* questioning on:\n\t- SOLID acronym (bonus question), represents a handful of design principles\n\t- what kinds of issues would come up with sticky sessions with a load balancer\n\t- how would you go about releasing a new esb, top to bottom\n\t- what was your worst project, and how did you overcome issues\n\t- what are your thoughts on a clustered ESB\n\t- do you have suggestions on particular products\n\t- no design pattern questions - maybe they meant 'architecture models'\n\n* mentioned they're also looking externally"],
        "id":"0ead0299-9928-4063-b444-2b899702d594",
        "_version_":1643080297461317632},
      {
        "tag":["python jupyter numpy"],
        "title":["Python numerical error"],
        "created":["20190824.1356"],
        "info":["Using python in jupyter notebook (full error, no further text to it):\nC:\\af\\runtime\\anaconda3\\lib\\site-packages\\ipykernel_launcher.py:10: RuntimeWarning: invalid value encountered in double_scalars # Remove the CWD from sys.path while we load stuff.\n\nRationale:\nAppeared to be a warning issued from the numpy library, indicating that one of the numbers it encountered was too large for the library.  Didn't seem to break the notebook though."],
        "id":"0bbd12b4-ee8b-41ff-bca2-a172ac7ba715",
        "_version_":1642783361078394880},
      {
        "tag":["design pattern"],
        "title":["Observer/listener"],
        "created":["20190321.1229"],
        "info":["behavioral or event-driven pattern where an observable object allows observers to register as listeners - when an event occurs, the oberved will notify the observers/listeners so they may behave as they prescribe; this model is a common way to implement or represent asynchronous processing or multi-threaded applications\n"],
        "id":"433c20ae-45e7-46c6-b63e-ddf1fbb6dea1",
        "_version_":1635983062425665536},
      {
        "tag":["guidewire data model database column"],
        "title":["Expand existing column"],
        "updated":["20190901.1630"],
        "created":["20181002.1513"],
        "info":["Appears to allow one to expand an existing column/attribute, safe for production (unverified)\n\n<column-override\n\tname=\"Description\"\n\ttype=\"mediumtext\"/>\n</extension>"],
        "id":"6023ada8-ed46-41cc-9fe5-29f0c592efa5",
        "_version_":1643517705405333504},
      {
        "tag":["eclipse xml"],
        "title":["Empty general eclipse project file"],
        "created":["20190824.1042"],
        "info":["Basic .project file for cases where a project is created by pasting generated code or similar:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<projectDescription>\n\t<name>genrealproject</name>\n\t<comment></comment>\n\t<projects>\n\t</projects>\n\t<buildSpec>\n\t</buildSpec>\n\t<natures>\n\t</natures>\n</projectDescription>\n"],
        "id":"c5f5ff5e-a519-4b87-abb7-d9cffef163d9",
        "_version_":1642771257361432576},
      {
        "title":["javascript ping"],
        "created":["20190620.1954"],
        "info":["function ping(host, port, pong) {\n\n  var started = new Date().getTime();\n\n  var http = new XMLHttpRequest();\n\n  http.open(\"GET\", \"http://\" + host + \":\" + port, /*async*/true);\n  http.onreadystatechange = function() {\n    if (http.readyState == 4) {\n      var ended = new Date().getTime();\n\n      var milliseconds = ended - started;\n\n      if (pong != null) {\n        pong(milliseconds);\n      }\n    }\n  };\n  try {\n    http.send(null);\n  } catch(exception) {\n    // this is expected\n  }\n\n}"],
        "id":"e551ade4-95d7-41ea-b14f-a6e8d732425d",
        "_version_":1636916981594587136},
      {
        "tag":["open source"],
        "title":["xml soap tools"],
        "updated":["20190626.1246"],
        "created":["20190626.1242"],
        "info":["* https://www.getpostman.com/\n* https://www.soapui.org/\n* boomerang is a chrome extension that has similar functionality"],
        "id":"1f8807f6-01cc-49b6-8446-cc67456c6e2d",
        "_version_":1637433643030806528},
      {
        "tag":["java file chooser gui"],
        "title":["Dialogue for file selection"],
        "created":["20190903.0801"],
        "info":["package gui;\n\nimport java.awt.Dimension;\nimport java.io.File;\nimport javax.swing.JFileChooser;\nimport javax.swing.JFrame;\n\npublic class FileChooserSnippet\n{\n\tstatic String dialogueTitle = \"This is my new dialogue/frame\";\n\tstatic String openInPath = \"/media\";\n\tstatic boolean allowMultiSelect = true;\n\t\n\tpublic static void main(String[] args) throws Exception {\n\t\t\n\t\tJFrame frame = new JFrame(dialogueTitle);\t\t\n\t\tJFileChooser chooser = new JFileChooser(openInPath);\n\t\t\n\t\tchooser.setMultiSelectionEnabled(allowMultiSelect);\n\t\tchooser.setFileHidingEnabled(false);\n\t\tchooser.setToolTipText(dialogueTitle);\n\t\tchooser.showOpenDialog(frame);\n\t\tchooser.setPreferredSize(new Dimension(350, 500));\n\t\tframe.setPreferredSize(new Dimension(350, 500));\n\t\t\n\t\tFile[] files = chooser.getSelectedFiles();\n\t\t\n\t\tif(files.length < 1) {\n\t\t\tSystem.out.println(\"No files selected.  Bort..\");\n\t\t\tSystem.exit(0);\n\t\t}\n\t\t\n\t\tSystem.out.println(\"files chosen: \" + files.length);\t\t\n\t\tfor(File f : files)\n\t\t\tSystem.out.println(f.getCanonicalPath());\n\t\t\n\t\tSystem.out.println(\"root: \" + files[0].getParentFile());\t\t\n\t\tString home = System.getProperty(\"user.home\") + File.separator + \"Desktop\";\n\t\tSystem.out.println(\"user.home: \" + home);\n\n\t}\n\n}\n"],
        "id":"457b8ca2-7152-4ddd-98fe-db07b0b18686",
        "_version_":1643666943000969216}]
  }}