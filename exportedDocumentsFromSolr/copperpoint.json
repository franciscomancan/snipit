{
  "responseHeader":{
    "status":0,
    "QTime":1,
    "params":{
      "q":"*:*",
      "rows":"1000",
      "_":"1569728711517"}},
  "response":{"numFound":76,"start":0,"docs":[
      {
        "tag":["2019 business division strategic goals"],
        "title":["2019 Goals"],
        "citation":["email from sangeetha"],
        "created":["20190404.1251"],
        "info":["Business Goals\nDeliver on the 2019 Projects, Run Support & Backlog work with a focus on scope, quality, timeline, and budget\na)  2019 Projects that you may be involved in this year include: PC BC and Digital upgrade, Other States new Business Slotting, Enterprise Data Warehouse, SalesForce Pipeline, CA , ID, MT -Other States Expansion, Renewal Slotting Phase 2,  Individual Dividends, and other Strategic and EPM projects\nMeasurements include:  Project deliverables targeted for 2019 are complete, your work on planning and estimating efforts as input to plans, meeting deliverable dates, delivering the agreed upon scope with quality, and within agreed upon budget, and driving resolution of blockers.  Your work on, service desk tickets, backlog work, on call support, meeting ticket SLA’s and documenting resolved tickets.  Examples of teamwork to deliver on this work.\n\nDivision Goals\nKeep moving to a single IT culture across multiple regions by completing the following activities:\n1.  Actively seek input and learn about existing processes outside your department/region/team. \nMeasurement:   Provide at least 3 instances of where you have reached outside of your team to get input on an issue, design/solution, or continuous improvement effort and document in your 1/1 meetings\n2.  Proactively seek ways to share knowledge and educate colleagues outside of your department/region/team\nMeasurement:  Create documentation for 2 areas (work with you manger to select) that will help other teams with consistency, understanding the application or solution, or how to do something to meet expectations (give an example specific to your team)\n3.  Get feedback from others on your approach to solutions you as an individual are working on\nMeasurement:  Conduct at least 2 peer reviews of solutions you are implementing and participate in at least 2 peer reviews with others  (to provide input into solutions and to help others learn about different work efforts) and discuss in your 1 on 1\n4.  Continue to build trust and respect across the division by investing in new relationships\nMeasurement:  Reach out and learn about a person on another team/region without a specific agenda in mind, learn one thing about them and share one thing about yourself and then share this with your manager in your one on one (3 people – 1 a quarter) \nMeasurement:  Exercise patience with others within IT – treat IT colleagues as you would treat our business partners – take time to answer questions, educate\n"],
        "id":"d9c00cb5-741e-4060-aeb7-c4c72608c6b7",
        "_version_":1629914524296413184},
      {
        "tag":["salesforce production"],
        "title":["GW Policy Center PRODUCTION is now pointing to Salesforce PRODUCTION - Successful Implementation last night - Apr 4, 2019"],
        "citation":["email from sangeetha"],
        "created":["20190405.1218"],
        "info":["Hello Everyone\nLast night we had GW Policy Center change where we are now pointing our GW Production environment to Salesforce PRODUCTION environment.. Thanks everyone for great support.. \n\n"],
        "id":"4d009d43-7ebf-4c80-b6be-48e0a0b360b6",
        "_version_":1630003019478204416},
      {
        "tag":["locale defect class code lookup search"],
        "title":["PH-375 Class Code/Phraseology improvement to impact UM imported data"],
        "created":["20190410.1649"],
        "info":["* https://bitbucket.org/copperpoint/policycenter905configs/pull-requests/274/sprint-1904up-req-defect-ph-375/diff\n\n* the platform was apparently looking up the classification on 'localized' class code tables, rather than the primary system table (wc7_class_codes...)"],
        "id":"902fb3e5-aced-4000-bdf9-58dbadda2fc6",
        "_version_":1630473383524171776},
      {
        "tag":["stg3 log share policy billing"],
        "title":["stg3 logs"],
        "citation":["per matt koch"],
        "created":["20190410.1636"],
        "info":["PC\n\\\\copperpoint.com\\applogs\\Guidewire\\GWSTG\\gwrsvwas001 = pc\n\\\\copperpoint.com\\applogs\\Guidewire\\GWSTG\\gwrsvwas002 = pc\n\\\\copperpoint.com\\applogs\\Guidewire\\GWSTG\\gwrsvwas003 = pc\n\\\\copperpoint.com\\applogs\\Guidewire\\GWSTG\\gwrsvwas006 = pc batch\n\nBC\n\\\\copperpoint.com\\applogs\\Guidewire\\GWSTG\\gwrsvwas004 = bc\n\\\\copperpoint.com\\applogs\\Guidewire\\GWSTG\\gwrsvwas005 = bc\n\\\\copperpoint.com\\applogs\\Guidewire\\GWSTG\\gwrsvwas007 = bc batch\n"],
        "id":"25259871-3089-4f4b-944b-03ec0100b943",
        "_version_":1630472158576640000},
      {
        "tag":["defect written premium"],
        "title":["PCBCV9-1738 DESCRIPTION: Earned Premium Report is incorrect for WP"],
        "created":["20190415.0956"],
        "info":["* worked with kathy kunzler\n* https://bitbucket.org/copperpoint/policycenter905configs/pull-requests/286/sprint-1904up-req-defect-pcbcv9-1738/diff"],
        "id":"ea406f2b-0773-48c1-9c4c-6de5d7cdfe9d",
        "_version_":1630900083817971712},
      {
        "title":["Policy Center 6.4 JDBC Driver"],
        "citation":["matt koch"],
        "created":["20190417.0850"],
        "info":["The 6.4 jdbc driver for PC has been added to the dev, int, int2, int3, stg2, and stg3 servers and the PC datasources have been reconfigured to use it."],
        "id":"ebc21179-91c8-4f9f-a1ee-06f7cd5a9308",
        "_version_":1631077052032483328},
      {
        "tag":["earned premium report"],
        "title":["PCBCV9-INT2 Earned Premium Report is incorrect for WP"],
        "created":["20190410.0858"],
        "info":["* new ticket, referring to Kathy Kunzler"],
        "id":"16122633-4f63-4d63-bc60-d952d356842a",
        "_version_":1630443382464577536},
      {
        "title":["Application Developer Interview - Raghu Teja Nimmagadda"],
        "created":["20190417.1723"],
        "info":["4 years of experience\nspoke well and had a good basic understanding of things\nseemed to have a lot of potential"],
        "id":"e34f04b0-c8f4-4d9a-bad1-6360bbe0ba03",
        "_version_":1631109291095097344},
      {
        "title":["sso contact manager stg"],
        "citation":["madhu"],
        "created":["20190411.1100"],
        "info":["* https://gw9stgcm.copperpoint.com/ab/"],
        "id":"f48284cf-7e83-4407-b343-63dacb1ed887",
        "_version_":1630541645364592640},
      {
        "tag":["billing $0 charge"],
        "title":["PCBCV9-1791 Error Thrown When Attempting to Finish Refactor Invoices Wizard"],
        "created":["20190422.1423"],
        "info":["* issue with customized $0.00 and $0.01 amount transactions in billing center\n* re-opened ticket with guidewire 00302654: https://urldefense.proofpoint.com/v2/url?u=https-3A__community.guidewire.com_s_case_50034000018xWwhAAE&d=DwMFaQ&c=UJu0ttEveUzO0KNkmBkAOrD6of6XwVzKXCutpKusS74&r=uLjJ0D0paVnRrP8kDHnDN62dcGsjr5R2OSEV96qfU9E&m=n-srlSAOJ5sMn8vR-l8GPxlLO2S6tceDYf9Y-MRchlY&s=FL-tvTRPdgvGY6cjBFPNIRueVb1F5rq6m4FQxxXLtMU&e=\n* looks like issue has something to do with database consistency checks as well (cannot have $0 transactions??)\n\nFeedback from Guidewire\n--------------------------------------------------------------------------------\nAs we already discussed:\n1. The only approved method to resolve this issue is to delete charge records with amount zero and all corresponding record.\nWe strongly recommend to do this before upgrade.\n2. Proposed by CopperPoint method to update amounts to 0.01 and update corresponding entities (invoice amount, transaction and so on) to 0.01\nwill modify account related amounts not correctly.\n\nTo answer your questions:\n1. What is the impact of deleting these records?\nThese records not used in BillinCenter 9. Deleting of these records will not create any data consistency or UI problems in decrease database size.\n2. What is the disadvantages of Update?\nI already dressed this in #2 of discussion.\n3. In provided by GW solution there are 2 \"delete\" statements that should be addressed:\na) --delete from bc_commissionoverride where ChargeID in (select chargeid from @tempchargeids)\nbc_commissionoverride table does not exist in CopperPoint environment.\nYou could skip this \"delete\"\nb) delete from bc_paymentplanmodifier where ReferenceChargeID in (select chargeid from @tempchargeids) is missing.\nAs a result, delete from bc_charge where id in (select chargeid from @tempchargeids) cannot be executed.\nPlease add this statement \"delete from bc_paymentplanmodifier where ReferenceChargeID in (select chargeid from @tempchargeids)\" to the script.\nI will update Knowledge base Article with this \"delete\" statement.\n4. Is it possible to test delete script in non-production environment?\nYes, it could be tested in copy of prod first before applying against production. \n"],
        "id":"8a075ab8-5a50-4555-95bd-41ba84209d6a",
        "_version_":1631550971221901312},
      {
        "tag":["document storage infrastructure AD login"],
        "title":["Imagenow Active Directory integration"],
        "citation":["doug henson email"],
        "created":["20190425.1441"],
        "info":["Imagenow DEV, INT and STG are now AD integrated.   \nUse your “network” or “production” account and password for access.    \nThe non-prd tiers still have the “tester1-4” accounts active for use.\t"],
        "id":"2ba4c5c4-91af-456a-aea4-ef9ca09c28e2",
        "_version_":1631824048439689216},
      {
        "tag":["elil rate table 2018 CW"],
        "title":["WC7 Employers Liability Increased Limits"],
        "created":["20190419.1129"],
        "info":["limit,rate,minPremium,statCode\n100/100/500,0,0,0\n500/500/500,0.008,75,9807\n1000/1000/1000,0.011,120,9812\n2000/2000/2000,0.014,140,9837\n3000/3000/3000,0.016,160,9837\n4000/4000/4000,0.018,180,9837\n5000/5000/5000,0.02,200,9837\n6000/6000/6000,0.022,210,9837\n7000/7000/7000,0.024,220,9837\n8000/8000/8000,0.026,230,9837\n9000/9000/9000,0.028,240,9837\n10000/10000/10000,0.03,250,9837\n"],
        "id":"85989584-8f10-459b-b8fd-3c69cc0941e0",
        "_version_":1631268474751811584},
      {
        "tag":["pmp link url"],
        "title":["password manager pro"],
        "created":["20190418.1028"],
        "info":["https://pmp.copperpoint.com:7272/PassTrixMain.cc\n\nstores all shared-environment credentials, though only a subset may be visible due to permissions\n"],
        "id":"eaa4da3b-6e9f-4f2d-a181-59f0412ceaec",
        "_version_":1631173822112595968},
      {
        "tag":["cheat sheet"],
        "title":["Rating Calculations"],
        "created":["20190419.1230"],
        "info":["* premium for code = (basis/100) * rate\n\n* increased limits = premium * incrasedLimitsFactor\nexample is 70000000 basis for 8810 (rate = 0.10) is 70K in premium, so (70000*.011) = $770"],
        "id":"a0f42e8f-3dd4-4340-81b0-93e03b91e7af",
        "_version_":1631272482811936768},
      {
        "title":["Messaging Plugin Best Practices"],
        "created":["20190425.0859"],
        "info":["* add an appropriate error description for any case that a message is blocked or errors"],
        "id":"666e64dc-c713-4292-963d-833c9f54c239",
        "_version_":1631802416597827584},
      {
        "tag":["cutover database updates sql"],
        "title":["Data Changs for v9 upgrade"],
        "updated":["20190426.1018"],
        "citation":["email on Tue 4/23/2019 3:57 PM"],
        "created":["20190424.1229"],
        "id":"0a4afd9c-1c47-4f8f-b047-2f831a48f029",
        "info":["-------------Rating related\n\n--v7 pc update \nselect * from pc_calcroutineparam where ParamType='String'\nupdate [pc_calcroutineparam] set ParamType = 'java.lang.String' where ParamType = 'String'\n-- updates 6 records\n\nupdate pc_ratebook set CascadedLookup = 1 where BookCode like 'CPMIWorkComp%' \n-- updates 17ish rows\n\n-------------Rating related ends\n\n--v9 pre upgrade\n--29 records\nupdate pc_pmlockedfield set FieldValue = 'money' where FieldName = 'ValueType' and PMLockedEntityID in (72,\n131,\n215,\n229,\n261,\n468,\n482,\n512,\n957,\n1156,\n1235,\n1595,\n1596,\n1630,\n1975,\n2182,\n2364,\n2380,\n2637,\n2673,\n3109,\n3133,\n3160,\n3193,\n3392,\n3445,\n3836,\n3848,\n4102)\n                Srikanth\n\n--12 records\nupdate pc_pmlockedfield set FieldValue = 'boolean' where FieldName = 'ValueType' and PMLockedEntityID in (333,\n424,\n576,\n998,\n1043,\n2027,\n2386,\n2405,\n2457,\n2863,\n3043,\n4391)\n                Srikanth\n--2 records\nupdate pc_pmlockedfield set FieldValue = 'count' where FieldName = 'ValueType' and PMLockedEntityID in (4513,4664)\n                Srikanth\n\n--1 record\nupdate pc_pmlockedfield set FieldValue = 'days' where FieldName = 'ValueType' and PMLockedEntityID in (3709)\n                Srikanth\n\n\npost upgrade\n-add sv-gwrpc-alc-(env) accounts to AEM\n-use GWRINT2_pc;\n--35 records\n\n****************************************************************************************************************************************************************************************\nBC preupgrade\nuse gwrstg3_bc;\n\nSELECT * FROM bc_billinginstruction billinginstruction1 WHERE billinginstruction1.Retired <> 0\n\nupdate bc_billinginstruction set retired = 0 WHERE Retired <> 0\n            Srikanth\n\n--query to find failing retired data\nSELECT * FROM bc_invoiceitem invoiceitem1 WHERE (invoiceitem1.Retired = 0 AND invoiceitem1.Reversed = 1 AND invoiceitem1.Amount <> 0 AND  NOT EXISTS (SELECT 1 FROM bc_revinvoiceitem revinvoiceitem2 INNER JOIN bc_invoiceitem invoiceitem3 INNER JOIN bc_basedistitem basedistitem4 INNER JOIN bc_basedistitem basedistitem5 INNER JOIN bc_basedist basedist6 ON basedist6.ID = basedistitem5.ActiveDistID ON basedistitem5.ActiveDistID = basedistitem4.ActiveDistID ON basedistitem4.InvoiceItemID = invoiceitem3.ID ON invoiceitem3.ID = revinvoiceitem2.OwnerID WHERE revinvoiceitem2.ForeignEntityID = invoiceitem1.ID AND basedist6.Retired = 0 AND basedist6.ID IN (SELECT basemoneyreceived7.BaseDistID FROM bc_basemoneyreceived basemoneyreceived7 WHERE (basemoneyreceived7.Subtype = 7 AND basemoneyreceived7.Retired = 0 AND  NOT EXISTS (SELECT 1 FROM bc_ModifiedFromPMR ModifiedFromPMR8 WHERE ModifiedFromPMR8.OwnerID = basemoneyreceived7.ID))) AND  NOT EXISTS (SELECT 1 FROM bc_basedistitem basedistitem9 WHERE (basedistitem9.Subtype = 5 AND basedistitem9.Retired = 0 AND basedistitem9.ID <> basedistitem5.ID AND basedistitem9.ID <> basedistitem4.ID AND basedistitem9.ActiveDistID = basedist6.ID)) AND  NOT EXISTS (SELECT 1 FROM bc_basedistitem basedistitem10 WHERE (basedistitem10.Subtype = 5 AND basedistitem10.Retired = 0 AND basedistitem10.ReversedDistID = basedist6.ID)) AND  NOT EXISTS (SELECT 1 FROM bc_basenonrecdistitem basenonrecdistitem11 WHERE (basenonrecdistitem11.Subtype IN (6, 7) AND basenonrecdistitem11.Retired = 0 AND CASE WHEN basenonrecdistitem11.ActiveDistID IS NOT NULL THEN basenonrecdistitem11.ActiveDistID ELSE basenonrecdistitem11.ReversedDistID END = basedist6.ID)) AND basedistitem5.InvoiceItemID = invoiceitem1.ID AND basedistitem5.Subtype = 5 AND basedistitem5.Retired = 0 AND basedistitem5.GrossAmountToApply = invoiceitem1.Amount AND basedistitem4.Subtype = 5 AND basedistitem4.Retired = 0 AND basedistitem4.GrossAmountToApply = invoiceitem3.Amount AND basedistitem4.ActiveDistID IS NOT NULL  AND invoiceitem3.Retired = 0) AND  NOT EXISTS (SELECT 1 FROM bc_revinvoiceitem revinvoiceitem12 INNER JOIN bc_invoiceitem invoiceitem13 INNER JOIN bc_basedistitem basedistitem14 INNER JOIN bc_basedistitem basedistitem15 INNER JOIN bc_basedist basedist16 ON basedist16.ID = basedistitem15.ActiveDistID ON basedistitem15.ActiveDistID = basedistitem14.ActiveDistID ON basedistitem14.InvoiceItemID = invoiceitem13.ID ON invoiceitem13.ID = revinvoiceitem12.OwnerID WHERE revinvoiceitem12.ForeignEntityID = invoiceitem1.ID AND basedist16.Retired = 0 AND basedist16.ID IN (SELECT basemoneyreceived17.BaseDistID FROM bc_basemoneyreceived basemoneyreceived17 WHERE (basemoneyreceived17.Subtype = 6 AND basemoneyreceived17.Retired = 0)) AND basedistitem15.Subtype = 1 AND basedistitem15.Retired = 0 AND basedistitem15.GrossAmountToApply = invoiceitem1.Amount AND basedistitem15.InvoiceItemID = invoiceitem1.ID AND basedistitem15.ID IN (SELECT chargeinstancecontext18.AgencyPaymentItemID FROM bc_chargeinstancecontext chargeinstancecontext18 WHERE (chargeinstancecontext18.Subtype = 5 AND chargeinstancecontext18.Retired = 0)) AND basedistitem14.Subtype = 1 AND basedistitem14.Retired = 0 AND basedistitem14.GrossAmountToApply = invoiceitem13.Amount AND basedistitem14.ActiveDistID IS NOT NULL  AND basedistitem14.ID IN (SELECT chargeinstancecontext19.AgencyPaymentItemID FROM bc_chargeinstancecontext chargeinstancecontext19 WHERE (chargeinstancecontext19.Subtype = 5 AND chargeinstancecontext19.Retired = 0))));\n\n--update failing data\nupdate bc_invoiceitem set retired = 1 where ID in(\nSELECT ID FROM bc_invoiceitem invoiceitem1 WHERE \n(invoiceitem1.Retired = 0 AND invoiceitem1.Reversed = 1 AND invoiceitem1.Amount <> 0 AND  \n                NOT EXISTS (SELECT 1 FROM bc_revinvoiceitem revinvoiceitem2 INNER JOIN \n                bc_invoiceitem invoiceitem3 INNER JOIN \n                bc_basedistitem basedistitem4 INNER JOIN \n                bc_basedistitem basedistitem5 INNER JOIN \n                bc_basedist basedist6 ON basedist6.ID = basedistitem5.ActiveDistID ON basedistitem5.ActiveDistID = basedistitem4.ActiveDistID \n                ON basedistitem4.InvoiceItemID = invoiceitem3.ID ON invoiceitem3.ID = revinvoiceitem2.OwnerID \n                WHERE revinvoiceitem2.ForeignEntityID = invoiceitem1.ID AND basedist6.Retired = 0 AND basedist6.ID IN \n                (SELECT basemoneyreceived7.BaseDistID FROM bc_basemoneyreceived basemoneyreceived7\n                WHERE (basemoneyreceived7.Subtype = 7 AND basemoneyreceived7.Retired = 0 AND  \n                 NOT EXISTS (SELECT 1 FROM bc_ModifiedFromPMR ModifiedFromPMR8 \n                 WHERE ModifiedFromPMR8.OwnerID = basemoneyreceived7.ID))) AND  \n                 NOT EXISTS (SELECT 1 FROM bc_basedistitem basedistitem9 \n                 WHERE (basedistitem9.Subtype = 5 AND basedistitem9.Retired = 0 AND basedistitem9.ID <> basedistitem5.ID \n                 AND basedistitem9.ID <> basedistitem4.ID AND basedistitem9.ActiveDistID = basedist6.ID)) AND  \n                 NOT EXISTS (SELECT 1 FROM bc_basedistitem basedistitem10 WHERE \n                 (basedistitem10.Subtype = 5 AND basedistitem10.Retired = 0 AND basedistitem10.ReversedDistID = basedist6.ID)) \n                 AND  NOT EXISTS (SELECT 1 FROM bc_basenonrecdistitem basenonrecdistitem11 \n                 WHERE (basenonrecdistitem11.Subtype IN (6, 7) AND basenonrecdistitem11.Retired = 0 AND \n                 CASE WHEN basenonrecdistitem11.ActiveDistID IS NOT NULL \n                 THEN basenonrecdistitem11.ActiveDistID ELSE basenonrecdistitem11.ReversedDistID END = basedist6.ID)) \n                 AND basedistitem5.InvoiceItemID = invoiceitem1.ID AND basedistitem5.Subtype = 5 AND basedistitem5.Retired = 0 \n                 AND basedistitem5.GrossAmountToApply = invoiceitem1.Amount AND basedistitem4.Subtype = 5 \n                 AND basedistitem4.Retired = 0 AND basedistitem4.GrossAmountToApply = invoiceitem3.Amount \n                 AND basedistitem4.ActiveDistID IS NOT NULL  AND invoiceitem3.Retired = 0) AND  \n                 NOT EXISTS (SELECT 1 FROM bc_revinvoiceitem revinvoiceitem12 INNER JOIN bc_invoiceitem invoiceitem13 \n                 INNER JOIN bc_basedistitem basedistitem14 INNER JOIN bc_basedistitem basedistitem15 \n                 INNER JOIN bc_basedist basedist16 ON basedist16.ID = basedistitem15.ActiveDistID \n                 ON basedistitem15.ActiveDistID = basedistitem14.ActiveDistID ON basedistitem14.InvoiceItemID = invoiceitem13.ID ON invoiceitem13.ID = revinvoiceitem12.OwnerID \n                 WHERE revinvoiceitem12.ForeignEntityID = invoiceitem1.ID AND basedist16.Retired = 0 AND basedist16.ID IN \n                 (SELECT basemoneyreceived17.BaseDistID FROM bc_basemoneyreceived basemoneyreceived17 WHERE (basemoneyreceived17.Subtype = 6 AND basemoneyreceived17.Retired = 0)) \n                 AND basedistitem15.Subtype = 1 AND basedistitem15.Retired = 0 AND basedistitem15.GrossAmountToApply = invoiceitem1.Amount \n                 AND basedistitem15.InvoiceItemID = invoiceitem1.ID AND basedistitem15.ID IN \n                 (SELECT chargeinstancecontext18.AgencyPaymentItemID FROM bc_chargeinstancecontext chargeinstancecontext18 \n                 WHERE (chargeinstancecontext18.Subtype = 5 AND chargeinstancecontext18.Retired = 0)) AND basedistitem14.Subtype = 1 \n                 AND basedistitem14.Retired = 0 AND basedistitem14.GrossAmountToApply = invoiceitem13.Amount \n                 AND basedistitem14.ActiveDistID IS NOT NULL  AND basedistitem14.ID IN \n                 (SELECT chargeinstancecontext19.AgencyPaymentItemID FROM bc_chargeinstancecontext chargeinstancecontext19 \n                 WHERE (chargeinstancecontext19.Subtype = 5 AND chargeinstancecontext19.Retired = 0)))))\n                Srikanth; around 60 records changed\n\n\nselect count(*) from bc_contact where len(name) > 60;\nupdate bc_contact set name = LEFT(NAME,59), NameDenorm = LEFT(NameDenorm,59) where LEN(name) > 60 ;\n                To be removed\n\n\n--find/delete duplicates\nselect pia.id, t.* ,pia.*, row_number() over (partition by pia.DirectBillPaymentItemID,pia.ActionKind order by pia.DirectBillPaymentItemID)\nfrom bc_paymentitemaction pia\njoin (\n    select DirectBillPaymentItemID, ActionKind, count(*) as qty\n    from bc_paymentitemaction\n    group by DirectBillPaymentItemID, ActionKind\n    having count(*) > 1\n) t on pia.DirectBillPaymentItemID = t.DirectBillPaymentItemID and pia.ActionKind = t.ActionKind\n\ndelete from bc_paymentitemaction where ID in (select ONE from (select pia.id as ONE, row_number()  over (partition by pia.DirectBillPaymentItemID,pia.ActionKind order by pia.DirectBillPaymentItemID) as TWO\nfrom bc_paymentitemaction pia\njoin (\n    select DirectBillPaymentItemID, ActionKind, count(*) as qty\n    from bc_paymentitemaction\n    group by DirectBillPaymentItemID, ActionKind\n    having count(*) > 1\n) t on pia.DirectBillPaymentItemID = t.DirectBillPaymentItemID and pia.ActionKind = t.ActionKind) Q\nwhere TWO = 2)\n                Srikanth; 20 records\n\n\n--had to run for bc INT\nSELECT * FROM bc_basemoneyreceived basemoneyreceived1 INNER JOIN bc_paymentinstrument paymentinstrument2 ON paymentinstrument2.ID = basemoneyreceived1.PaymentInstrumentID WHERE (basemoneyreceived1.Subtype IN (3, 7) AND basemoneyreceived1.Amount = 0 AND basemoneyreceived1.Retired = 0) AND paymentinstrument2.PaymentMethod <> 7  \n\nupdate bc_basemoneyreceived set retired = 1 where id in (241288)\n                Srikanth; 1 record\n\n\nSELECT  *  FROM  bc_charge  WHERE  NOT  (Amount != 0)\nupdate bc_charge set Amount = -0.01 where Amount = 0\n                To be removed\n\n-----------------\nAfter upgrade\n-----------------\nUSE [GWRSTG3_bc]; \ngo\n\ndelete from [dbo].[bc_retpremhandlingscheme] \n        where [HandlingCondition] in (select [ID] from [dbo].[bctl_retpremhandlingcondition] where [Name] <> 'Other'); \n               Srikanth\n\n--1 row updated\nupdate [dbo].[bc_retpremhandlingscheme] set [StartDateOption] = (select top 1 [ID] from [dbo].[bctl_retPremstartdateoption] where [TYPECODE] = 'NotRestricted'),\n[AllocateTiming] = (select top 1 [ID] from [dbo].[bctl_retpremallocatetiming] where [NAME] = 'Billed'), Priority = 1   \n where [ReturnPremiumPlanID] in (select [ID] from [dbo].[bc_plan] where [Name] like '%Return Premium Plan');\n                Srikanth\n\n--1 rows updated\nupdate [dbo].[bc_plan] set [ChargeQualification] = (select top 1 [ID] from [dbo].bctl_retpremchargequal where [TYPECODE] = 'Account') where [Name] like '%Return Premium Plan%';\n                Srikanth\n"],
        "_version_":1631897922266202112},
      {
        "tag":["cli version 9 v9"],
        "title":["Guidewire command line reference"],
        "updated":["20190425.1727"],
        "created":["20190425.1723"],
        "id":"dfb84d76-2588-4484-bf83-984a3e967981",
        "info":["Core Application Tasks\n----------------------\nclean - Delete the build directories.\ncleanIdea - Delete Studio project files (.iml, .idea)\ncodegen - Generate entities, PCFs, permissions, and other sources\ncompile - Compile Java sources, re-generate sources, OSGi metadata, and prepare Web application. Pass -DincludeGtest=true to compile sources in gtest.\ndropDb - Drop all database tables. Use -Denv=<env> to use a database configuration with the specified env attribute.\nidea - Generate Studio project\ninspect - Run Guidewire Studio Inspections.\nrunServer - Start the Guidewire application server. Supported options --debug-jvm, --debug-shmem, --no-suspend, --run-level <num>, --test, -Denv=<env>\nstopServer - Stop the Guidewire application server.\nstudio - Start Guidewire Studio.\n\nConfiguration Upgrade Tasks\n---------------------------\ngenRuleReport - Build the rule repository report\n\nApplication Server Tasks\n------------------------\nearWeblogicDbcp - Build the EAR file for Weblogic including JDBC drivers.\nearWeblogicJndi - Build the EAR file for Weblogic without JDBC drivers.\nearWebsphereDbcp - Build the EAR file for Websphere including JDBC drivers.\nearWebsphereJndi - Build the EAR file for Websphere without JDBC drivers.\nwarJbossDbcp - Build the WAR file for Jboss including JDBC drivers.\nwarJbossJndi - Build the WAR file for Jboss without JDBC drivers.\nwarTomcatDbcp - Build the WAR file for Tomcat including JDBC drivers.\nwarTomcatJndi - Build the WAR file for Tomcat without JDBC drivers.\n\nGlobalization Tasks\n-------------------\ndiffDisplayKeys - Generate missing display keys in 'missing-display-keys' directory.\nexportLocalizations - Export localizations, requires -Dexport.file=<translation file> -Dexport.language=<destination language>\nimportLocalizations - Import localized resources from the named file (<translation file>) for the named language (<destination language>).requires -Dimport.file=<translation file> -Dimport.language=<destination language>\n\nIntegration Tasks\n-----------------\nexportWsdl - Export the WSDL for WSI web services in wsdl.\ngenFromWsc - Build WSC meta-information. Run this command whenever there are new .wsc files containing web service URLs available to generate the web service stub code. Place all WSC files in the configuration module.\ngenWsiLocal - Generate the WSDL for WSI web services in gsrc/wsi/local.\n\nDocumentation Tasks\n-------------------\ngenDataDictionary - Build the Data Dictionary. optional property : -DoutputFormat=[html,xml], default: 'html'\ngenEntityModelXml - Generate the entity model in XML format.\ngosudoc - Generates javadoc-like HTML-based API documentation for all Gosu classes in the project.\n\nPlugin Development Tasks\n------------------------\ngenJavaApi - Build the Java API toolkit. Add the optional -Ddeprecated=true option to additionally generate the deprecated Java APIs.\npluginStudio - Start Guidewire Plugin Studio.\n\nOther Tasks\n-----------\ngenDataMapping - Build the data mapping files with all tables and typelists concatenated. Use the -Dsplit=true option to split out the tables and typelists.\ngenImportAdminDataXsd - Regenerate the XSD files for importing administrative data.\ngenPcfMapping - Build the PCF mappings\ngenPhoneMetadata - Regenerates phone metadata in config/phone/data. Run this target if you have modified the phone metadata XML files.\ninstallLocalizedPack - Install a localized pack by a given zip file. -PlocalizedPackPath=(the path to the language/region pack zip file)\nmergeModule - Merge given configuration module on top of 'configuration', requires -Dmerge.module=<module directory>\nupdateTheme - Compiles sources css files (.scss) into css and copies them into working server directory\nverifyResources - Check pcf, annotation, gxmodel, workflow, types. Can use -Dresource.types=<types> to limit types property\nversion - Print information on the Guidewire application build and third-party application versions.\nwebResources - Copy all resource files (js, css, images, etc.) into working server directory so they are available right away\nzipChangedConfig - Create a named archive (<filename>) in ZIP format containing any changed configuration files. required property: -DoutputFile=<filename>; optional properties: -Dexclude=<exclude list>, -DappRootDirectory=<dir>\n\nDeprecated Tasks\n----------------\nbuild-jboss-war-dbcp - Use task \"warJbossDbcp\" instead\nbuild-jboss-war-jndi - Use task \"warJbossJndi\" instead\nbuild-tomcat-war-dbcp - Use task \"warTomcatDbcp\" instead\nbuild-tomcat-war-jndi - Use task \"warTomcatJndi\" instead\nbuild-weblogic-ear-dbcp - Use task \"earWeblogicDbcp\" instead\nbuild-weblogic-ear-jndi - Use task \"earWeblogicJndi\" instead\nbuild-websphere-ear-dbcp - Use task \"earWebsphereDbcp\" instead\nbuild-websphere-ear-jndi - Use task \"earWebsphereJndi\" instead\ndev-dropdb - Use task \"dropDb\" instead\ndev-start - Use task \"runServer\" instead\ndev-stop - Use task \"stopServer\" instead\ndisplaykey-diff - Use task \"diffDisplayKeys\" instead\nexport-l10ns - Use task \"exportLocalizations\" instead\nimport-l10ns - Use task \"importLocalizations\" instead\nregen-datamapping - Use task \"genDataMapping\" instead\nregen-dictionary - Use task \"genDataDictionary\" instead\nregen-entity-model-xml - Use task \"genEntityModelXml\" instead\nregen-from-wsc - Use task \"genFromWsc\" instead\nregen-gosu-api - Use task \"gosudoc\" instead\nregen-java-api - Use task \"genJavaApi\" instead\nregen-pcfmapping - Use task \"genPcfMapping\" instead\nregen-phone-metadata - Use task \"genPhoneMetadata\" instead\nregen-project - Use task \"idea\" instead\nregen-rulereport - Use task \"genRuleReport\" instead\nregen-wsi-local - Use task \"genWsiLocal\" instead\nregen-xsd - Use task \"genImportAdminDataXsd\" instead\nverify-resources - Use task \"verifyResources\" instead\nzip-changed-config - Use task \"zipChangedConfig\" instead\n"],
        "_version_":1631834277191614464},
      {
        "title":["Upgrade Cutover Issues"],
        "updated":["20190501.0853"],
        "created":["20190429.1158"],
        "id":"aef513b3-cd55-4a00-a8fa-536019578ab2",
        "info":["** most of the integrations do not work from the 2nd ISL node (outgoing network connections) - salesforce, experian, slotting, mitchel\n\nSlotting issue:\n29 Apr 2019 10:47:29,687 [https-jsse-nio-8443-exec-1] ERROR PredictionController.postAndStorePrediction: top-level issue in fetching prediction from analytics cloud service.\norg.springframework.web.client.ResourceAccessException: I/O error: Connection reset; nested exception is java.net.SocketException: Connection reset\n                at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:453)\n                at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:415)\n                at org.springframework.web.client.RestTemplate.postForObject(RestTemplate.java:294)\n                at com.cpmi.webservices.slotting.v20180817.PredictionController.postAndStorePrediction(PredictionController.java:123)\n                at com.cpmi.webservices.slotting.v20180817.PredictionController.handleRequest(PredictionController.java:48)\n                at com.cpmi.webservices.slotting.v20180817.NewBusinessSlottingServiceImpl.getSlottingResults(NewBusinessSlottingServiceImpl.java:66)\n\nSalesforce issue:\n30 Apr 2019 07:42:35,427 [https-jsse-nio-8443-exec-9] INFO  SalesForceServiceImpl.updateInsertRecord: SalesForceServiceImpl:updateInsertRecord: Received record for InsertUpdate Job: 460799305\n30 Apr 2019 07:42:35,427 [https-jsse-nio-8443-exec-9] INFO  SalesForceServiceImpl.updateInsertRecord: SalesForceServiceImpl:updateInsertRecord: Logging IN\n30 Apr 2019 07:42:35,427 [https-jsse-nio-8443-exec-9] INFO  SalesForceWSClient.login: SalesForceWSClient:login: CONFIG: guidewirepc@copperpoint.com  =>  https://login.salesforce.com/services/Soap/c/45.0/0DF2E000000PQIa\n30 Apr 2019 07:42:35,488 [https-jsse-nio-8443-exec-9] ERROR SalesForceServiceImpl.updateInsertRecord: SalesForceServiceImpl:updateInsertRecord: Failed to send request to https://login.salesforce.com/services/Soap/c/45.0/0DF2E000000PQIa\n30 Apr 2019 07:42:35,599 [https-jsse-nio-8443-exec-9] ERROR SalesForceServiceImpl.updateInsertRecord: SalesForceServiceImpl:updateInsertRecord: com.sforce.ws.ConnectionException: Failed to send request to https://login.salesforce.com/services/Soap/c/45.0/0DF2E000000PQIa\n30 Apr 2019 07:42:35,912 [https-jsse-nio-8443-exec-9] ERROR SalesForceServiceImpl.updateInsertRecord: SalesForceServiceImpl:updateInsertRecord: CAUGHT in Catch BLOCK: Failed to send request to https://pacificcomp.my.salesforce.com/services/Soap/c/45.0/00D3000000001U3/0DF2E000000PQIa\n30 Apr 2019 07:42:36,021 [https-jsse-nio-8443-exec-9] ERROR SalesForceServiceImpl.updateInsertRecord: SalesForceServiceImpl:updateInsertRecord: CAUGHT in Catch BLOCK: com.sforce.ws.ConnectionException: Failed to send request to https://pacificcomp.my.salesforce.com/services/Soap/c/45.0/00D3000000001U3/0DF2E000000PQIa\n\nExperian:\n30 Apr 2019 08:05:11,951 [https-jsse-nio-8443-exec-12] INFO  EcalsClient.getNetConnectUrl: Received NetConnect URL\n30 Apr 2019 08:05:11,951 [https-jsse-nio-8443-exec-12] DEBUG NetConnectUrlValidator.validateNetConnectUrl: Validating NetConnectUrl: https://ss3.experian.com/netconnect2_0/servlets/NetConnectServlet\n30 Apr 2019 08:05:12,211 [https-jsse-nio-8443-exec-12] ERROR NetConnectUrlValidator.validateNetConnectUrl: Error Validating NetConnectUrl: https://ss3.experian.com/netconnect2_0/servlets/NetConnectServlet\njavax.net.ssl.SSLException: Received fatal alert: protocol_version\n\n\nSOLUTION:\nDI has initiated an application and host server restart (#89684 Reboot ISLPVLAS002).  \nIt's unclear or uncommunicated whether there have been changes on the 'broken' server but, in sitting with Matt, he had said that there were changes \nin the way the ISL servers were started (they used to be started off a different server... '007' or something).  He was also mentioning something about the \ntomcat account not being present on the 002 ISL server.\n\n20190501: After restart the applications have begun to work again.  The official response from Evan was that \"Nothing changed, the server was rebooted\" but I don't buy it.\nBased upon the conversation I had with Matt.K, there were changes for upgrade which probably would have called for a restart of the application at least.  Speculation will\nhave to suffice due to a lack of honesty between our departments.\n\n"],
        "_version_":1632345864558084096},
      {
        "tag":["gw.lob.wc7.WC7WorkersCompLineEnhancement.gsx"],
        "title":["Determine Governing Class Code"],
        "citation":["https://bitbucket.org/copperpoint/policycenter905configs/pull-requests/344/sprint-1906run-req-defect-gw-839/diff"],
        "created":["20190509.0852"],
        "info":["** Saved this bit on the assumption that it was correct and true.\n\nfunction CPMIDetermineGoverningClassCode() : entity.WC7ClassCode {  \n  /*\n  This function determines the 'Governing Class' and sets the SIC code of the Primary Named insured to the corresponding SIC code.  If there is no governing class or the SIC code is not found, the function does nothing\n  This function requires the new extended fields in WC7ClassCode.xml.  The SIC code from that file must match an IndustryCodes.xml SIC code or the function will do nothing.\n  */\n    var maxPayroll : int\n    maxPayroll = 0\n    var wClass : WC7ClassCode \n    wClass = null\n    var ClassCode = new HashMap<WC7ClassCode, int>()\n    // Iterate through each class.  If the class payroll is the highest AND the class is not a standard exception, that class becomes the governing class\n    \n    // BD PCOSE-244\n    // BD GW-839 | Added filter to eliminate StdException ClassCodes from initial calculation.\n    foreach (emp in this.WC7CoveredEmployees.where(\\e -> !e.ClassCode.StdException_Ext))\n    { \n      /** PCOSE-2527 | 20180821 | afrancis | Accomodate 'if-any' exposure. */\n\n      var additionalBasis = (emp?.IfAnyExposure)? 0: emp.BasisAmount\n      if(ClassCode?.keySet()?.contains(emp.ClassCode))\n        ClassCode.put(emp.ClassCode, ClassCode.get(emp.ClassCode) + additionalBasis)\n      else\n        ClassCode.put(emp.ClassCode, additionalBasis)\n    }\n      \n    if(!ClassCode.Empty){\n      maxPayroll = 0\n      for(i in ClassCode.values()){\n        if(maxPayroll < i)\n          maxPayroll = i\n      }\n      var maxpayrollCount = 0\n      for(i in ClassCode.values()){\n        if(maxPayroll == i)\n          maxpayrollCount++\n      }\n      if(maxpayrollCount == 1){\n        foreach(key in ClassCode.keySet()){\n          if(ClassCode.get(key) == (maxPayroll)){\n            wClass = key  \n          }  \n        }\n      }\n    }\n     \n    //return wClass\n    if(wClass==null){\n     foreach (emp in this.WC7CoveredEmployees) {\n        if (emp.BasisAmount > maxPayroll)\n          if (emp.ClassCode.StdException_Ext) {\n              maxPayroll = emp.BasisAmount \n              wClass = emp.ClassCode\n          } \n     }\n    }\n    return wClass\n}"],
        "id":"e84b230f-cc66-4bc4-a767-d88e8c05f8ad",
        "_version_":1633070508479086592},
      {
        "tag":["platform version v6, v7"],
        "title":["Guidewire Gosu Bundle"],
        "citation":["training material"],
        "created":["20190510.0933"],
        "info":["In some circumstances, Guidewire applications automatically commit new and changed data, including:\nBusiness rules\nWorkflows\nCertain plugins\nCode executed from the UI in edit mode\n\nIn these cases, explicit bundle manipulation is required:\nWeb services\nBatch processes\nModifications to entities returned from queries\nCertain plugins\nCode executed from the UI in read-only mode\n\nYou CANNOT evict an entity from a bundle (\"Evicting\" an entity from a bundle means disassociating the entity entirely from the bundle before any commit is attempted.)\n\n\nGuidewire configurators and integrators may refer to an entity in a bundle as a “database-backed entity”, an entity of type entity.KeyableBean, and/or as entity that implements the KeyableBean delegate. This simply means that the entity is to be inserted into the database when the bundle is committed.\n\nBundle is a Guidewire class that implements the entity BundleProvider.  The Bundle class maintains a graph of objects for the convenience of application code. Bundles can be used to group together a number of entities for transmission to the database. The add method add beans to the bundle. The remove method marks a bean for removal.  The commit method invokes a complex procedure that tries to the save the entities in the bundle to the database. \n"],
        "id":"ecfafb5d-16ea-4c3d-9608-f91a9685e48e",
        "_version_":1633164423765950464},
      {
        "title":["Integration troubleshooting"],
        "created":["20190430.1622"],
        "info":["VALIDATE:\n- the endpoint URL is valid\n- the client is using the correct credentials (look for user/pass issues)\n- the server is able to authorize the client's credentials (through AD or LDAP or through authorized accounts in the Spring configuration (ISL))\n- external service accounts not locked\n- servers making request have the proper certificates and that server clones have the same certificate trees (roots, dependent certs, etc..)\n\n\n"],
        "id":"483e32cd-3519-45e7-b9fc-fbc6be87d84d",
        "_version_":1632283943113850880},
      {
        "tag":["gl extract batch"],
        "title":["REQ/DEFECT: GW-680 DESCRIPTION: Move JAVA to Gosu for GL Job. Migrated External code, created 3 new batches and one new scriptParameter. "],
        "created":["20190501.1011"],
        "info":["https://bitbucket.org/copperpoint/billingcenter905configs/pull-requests/157/sprint-1905run-req-defect-gw-680/diff"],
        "id":"6b27609b-e9df-4bf7-a801-bdd37e8f4c60",
        "_version_":1632350776540004352},
      {
        "title":["GWCOPY moves"],
        "created":["20190427.1732"],
        "info":["EDW - SV0253 GWCOPY will move to DWHPVWSQ010 GWCOPY."],
        "id":"35356a13-65c1-47c9-b65e-8fec289699b7",
        "_version_":1632015821335166976},
      {
        "title":["1905 Release Notes"],
        "created":["20190516.1436"],
        "info":["GW-379\tINTOSE E2E Migration - BC migration plans did not update BC for expired policy\nGW-482\tFirst Installment Invoice Not Created on rewrite Policy\nGW-515\tErrors with User Permissions\nGW-638\tMoving Charges Incorrectly Creates New Invoice\nGW-644\tBill Date on Installment Schedule Document is Not Correct\nGW-646\tInvoice Document Incorrectly Includes Full Payment Wording\nGW-653\tFirst Payment Amount on Remittance Slip Does Not Tie to BillingCenter Charges\nGW-654\tError Thrown in BC When Moving Auto Fee Assessment Charge from a Billed to a Planned Invoice\nGW-656\tBilling Plan and Delinquency Plan not Updated on Renewal\nGW-676\tUnable to Manually Close a Delinquency in BC\nGW-679\tTwo Separate First Payment Invoices Created for Policies with Same Invoice and Due Date\nGW-680\tMove JAVA to Gosu for GL Job\nGW-688\tWeb Payments Applied to the Wrong Policyholder\nGW-733\tPortal Submission Blocked Due to Market Reservation Not Working with SSN\nGW-742\tClass Code added for Officer replacing Employee Class Code\nGW-744\tActivities in BC Have Assigned To Field Overridden by System\nGW-745\tNo Charge for State Waiver of Sub Added During Policy Change\nGW-747\tPCBCV9-1796 - Blanket WOS Added Mid-term Not Charged at Audit\nGW-748\tPCBCV9-1800 - GL - Commissions Not Calculated Correctly at Audit When Written is Greater than Reported\nGW-749\tSchedule WOS Not Applied at Audit\nGW-750\tIncreased Employers Liability Limits Not Applied at Audit\nGW-752\tAfter Moving Charges, Each Moved Charge is Treated as Additional Installment in the Description on the Invoice Charges Screen\nGW-753\tCharges for Premium Report Scheduled to Billed Invoice\nGW-758\tInvoice Document Shows Incorrect Charges When Charges Moved from Billed to Planned Invoice\nGW-764\tPROD ISSUE: Dec Page First Payment Incorrect\nGW-800\tFunds Tracking Menu Option Not Available in BC for Authorized Users\nGW-808\tWhen Uploading Documents to BC, Status and Security Type Fields Are Displayed\nGW-809\tWhen Uploading Documents to BC, Document Type Field Displays More Options than Expected\nGW-810\tWhen Uploading Documents to BC, the Document Name is Not Populated Based on Document Type\nGW-836\tPreviously Billed Charges Moved to Planned Invoice\nGW-845\tGL - Incorrect WPA Transaction at Audit When Estimated Premium is Equal to Written Premium\nGW-849\tAdd Doc Type APPCOV to PC - Shareholder\n"],
        "id":"da909e1e-cf5d-4d90-9275-0ac641e59361",
        "_version_":1633726165098168320},
      {
        "tag":["POC proof of concept"],
        "title":["IT Design Review"],
        "updated":["20190517.1047"],
        "created":["20190516.1431"],
        "info":["matt riley talking about bringing Splunk into our systems, looks like it's being heavily pushed by Bryan as well (claims).\n\nsnippets\n•\tcurrent solution is reactive, uninformed\n•\tideal is proactive, continuous, real-time\n•\tessentially \"BI\" for IT (charts, feedback, auditing)\n•\thave to install agents that feed data to the cloud\n•\tno metrics on the necessary resources for the agents\n•\tlooking at either on-site or cloud implementaiton (onsite requires storage whereas cloud impl. will utilize our external pipe/tunnel bandwidth resources)\n•\twould ideally require us to reformat logs for less whitespace, more 'machine readable' (what's the point of using a tool if you have to change your format?, the index will already remove garbage/unnecessary content)\n•\tSplunk charges/bills based upon volume/throughput, amount of data fed to service (enterprise product)\n•\tno alternatives were investigated (such as ELK, etc..), per question in presentation; there was a POC 3 years ago (Matt) with 'Logarithm'\n•\tLogarithm is the current solution but is used only as a security-related monitor tool for DI, and it is currently over its limit and requiring an upgrade, costing $30k+\n\nquestions\n•\thow does this improve from Datapoint?\n•\tis there intersection with this app and Dynatrace/Datapoint\n•\twill it require deployments (other than for splunk upgrade)\n•\twhat kind of footprint (actually saving logs?)\n\nmisc\n•\thas to be approved by audit (external cloud services), scott, whoever..., need requirements, cost projecting, etc..\n•\tfor overarching security concerns, 'Duo' was mentioned (not sure what this is, is it the Cisco product?)\n\nTalked to Matt Riley about duo after meeting; according to him we're bringing that product into implementation in the next couple of months\n"],
        "id":"c6e49f8e-d85b-4c4c-8eca-738fa3475ab4",
        "_version_":1633802293833891840},
      {
        "tag":["edw planning"],
        "title":["Enterprise Data Warehouse Policy Comparison"],
        "created":["20190521.1445"],
        "info":["•\t'conceptual premium model' is 'linear' per seth, appears more hierarchical by sight\n•\tunit of risk = class code\n•\tCompany name is at the Account level, which is also the case for OtherLines/Commercial\n•\t\"Employer (if other than Primary Named insured)\" field on location page should be required, per Annette; it\napparently is responsible for several errors on the BI/reporting side\n•\tper Seth, after phase 1 release of the EDW, GL will be generated from the EDW (not sure of the details or otherwise, just interesting\n•\tper Seth, the slotting data stored in the integration database is not being moved to the EDW (as was originally intended)\n•\twe have restricted the changing of Payment Plan on a policy from inception; the only way to do it is to cancel a policy and rewrite it;\nthis could potentially be a gap with PCIC (per sangeetha and raja \"gap #26\");\n•\tas of meeting, they do not have commission/rates in the model\n\n\nCriteria to warehouse a particular field (per me, unofficial):\n1)\tnecessary for reporting (ncci, finances, rating, etc...)\n2)\tsomething that business 'might find useful' in reporting\n3)\tsomething that affects money, in either direction (similar to #1)\n"],
        "id":"75eee6d1-be84-4a66-8f35-c9c02807d627",
        "_version_":1634179679690686464},
      {
        "tag":["sql"],
        "title":["GW-833 update"],
        "citation":["danial frost"],
        "created":["20190521.1451"],
        "info":["Issue summary: The two columns for a policy period, TaxSurchargesRPT and TaxSurchargesRPT_cur, are new to V9 and policy periods that existed before the upgrade now have these columns set to null. Audit policy periods that were quoted or completed before the upgrade exhibit an issue where reversing them will try to update these columns. Since these policy periods are locked, the commit fails. The data fix will update these columns to $0 USD for all audits, see attached file for exact conditions.\n\nupdate pp \nset pp.TaxSurchargesRPT = 0,\npp.TaxSurchargesRPT_cur = 10001\nfrom dbo.pc_policyperiod pp\njoin dbo.pc_job j on pp.JobID = j.ID\njoin dbo.pc_auditinformation ai on j.AuditInformationID = ai.ID\nwhere pp.Status in (10004, 7) --completed and quoted\nand j.Subtype = 1 -- audits\nand ai.ReversalDate is null  --Can't be reversed if it is already reversed.\nand pp.TaxSurchargesRPT is null\nand pp.TaxSurchargesRPT_cur is null\n\n\n\n"],
        "id":"e6a0ca1c-ea6f-4278-815d-a52c0d783fde",
        "_version_":1634182367814877184},
      {
        "tag":["rating prorata"],
        "title":["Prorate non-domestic codes"],
        "created":["20190513.1134"],
        "info":["* Prorating of non-domestic (standard) codes seems to work at this point and it does so by prorating the basis\nin the backround and not in the rate routine.\n\n* Prorating of domestic codes does not work at this point (as evident from gw-535).  I suggested to business to fix\nthis so it is consistent with proration of non-domestic codes but they (diane, isela, rhonna) are unwilling to prorate\nthe basis since it is supposed to represent the number of employees.  As a result, we're forced to implement the prorate\nin the rate it will be inconsistent with the way that other (non-domestic) codes work."],
        "id":"4ff2de66-1d88-48bc-8159-b54817e64a42",
        "_version_":1633443113219391488},
      {
        "tag":["codes"],
        "title":["Control-M batches"],
        "updated":["20190514.0842"],
        "created":["20190513.1114"],
        "info":["Policy\nGWPC-W-DatabaseDistribution\nGWPC-P-TeamScreens\n\nContact\nGWCM-P-CheckMessageQueues \n\nBilling\nGWBC-GLExtractProcessor\nGWBC-BLCheckExtractProcessor\nGWBC-P-SuspensePayment\n"],
        "id":"b520150d-2d18-4335-b3ac-bd14f05c9db3",
        "_version_":1633522748738240512},
      {
        "title":["Gosu Mapper as Parameter"],
        "created":["20190520.1114"],
        "info":["function sum( currency : Currency, mapper(elt:T) : MonetaryAmount ) : MonetaryAmount {\n    var sum = new MonetaryAmount(0, currency)//TODO: 0bd.ofCurrency(currency)\n    for (elt in this) {\n      sum = sum.add(mapper( elt ))\n    }\n    return sum\n}\n\nSaid function could be called in the following manner:\n\nvar auditedTotal = costs.sum(currency, \\c -> c.ActualAmountBilling)"],
        "id":"084ce217-2a79-4c84-870f-9729d79901e9",
        "_version_":1634075905335754752},
      {
        "tag":["rating sql"],
        "title":["Short Rate Penalties"],
        "updated":["20190523.1121"],
        "created":["20190517.1443"],
        "info":["Definition: With short-rate cancellation, the insurer is entitled to retain a greater percentage of unearned premium (UEP) than would otherwise apply with pro rata cancellation. The method in which the short-rate cancellation penalty may apply varies with the insurance policy in question.\n\nIn our system:\nShort-rate penalties will be assessed ONLY at Final Audit, per WC7ShortRatePenaltyEligibility_CPMI rate routine (revisited gw-624).\n\nThere is a $15 minimum that will be assessed if (prorated expense constant + expense constant penalty) < $15.\n\nRelated routines:\nWC7ExpenseConstantShortRatePenalty_CPMI\nWC7ShortRatePenalty_CPMI\n\n/*********************************************************************************************************************************************************\n * Following bit will query short-rate cancellations or can also shed light on different cancellation methods.\n * \n * RefundCalcMethod = { 1=Flat, 2=Pro rata, 3=Short rate} \n*/\nuse GWCPY_pc\n\nselect\npp.PolicyNumber,\npp.TermNumber,\nconvert(varchar,pp.PeriodStart,1) as PeriodStart,\nconvert(varchar,pp.PeriodEnd,1) as PeriodEnd,\nst.NAME as BranchStatus,\njt.NAME as JobType,\n(select name from pctl_calculationmethod where id = pp.RefundCalcMethod) as RefundCalcMethod,\nDATEDIFF(day, pp.PeriodStart, pp.CancellationDate) as TermLengthInDays\nfrom \npc_policyperiod pp\n\tleft join pctl_policyperiodstatus st on pp.Status = st.ID\n\tleft join pc_job j on pp.JobID = j.ID\n\tleft join pctl_job jt on j.Subtype = jt.ID\nwhere\n\t1=1\nand\tRefundCalcMethod = 3\nand\tpp.MostRecentModel = 1\nand pp.PeriodStart > '2018-01-01'\norder by\n\tTermLengthInDays"],
        "id":"003b6fa5-4c2c-4756-8427-a4e2bfab54b2",
        "_version_":1634348141782237184},
      {
        "tag":["document production batch print error"],
        "title":["Server: AEMPRD-PC/BC [SMTPAppender] - WatchedFolder_BatchPrintQueue"],
        "citation":["emails from Doug Henson"],
        "created":["20190602.2127"],
        "info":["AEM PRD log file displaying script errors starting at 20:50.    Batch and generate failures occurred due to errors.    Server was rebooted errors continued.  Stopped jboss at 22:42pm and restarted log continues to display same messages.\n\n20:50:52,516 WARN  [com.adobe.document.XMLFormService] (RequestProcessor-5) ALC-XTG-032-275: [7960] Error: null is not an object\n20:50:52,533 WARN  [com.adobe.document.XMLFormService] (RequestProcessor-5) ALC-XTG-032-108: [7960] Script failed (language is javascript; context is xfa[0].form[0].CopperPoint[0].#pageSet[0].PageArea1[0].SlipSubform[0])\n\nDoug (excerpts):\n1,806 items are in generate documents each time one is processed the error is written to the log. \nAll failed batches have been reprocessed,   Warning messages were still produced in the logs for all of the documents.   I will work with OSE app dev staff on Monday about the messages in the server logs."],
        "id":"adb6df52-cecb-4732-bbd7-9bc188e53453",
        "_version_":1635292847916711936},
      {
        "tag":["rating"],
        "title":["New Mexico Safety Device Reduction"],
        "created":["20190522.1359"],
        "info":["Per NCCI: If this endorsement is used (\"New Mexico Safety Device EXCLUSION Endorsement\"), the carrier must provide a 5% credit against authorized New Mexico rates.\n\nAs of 20190522, we are currently offering the discount on the wrong endorsement (\"New Mexico Safety Device COVERAGE Endorsement\").  \nGW-678 was opened to turn this around.\n\nErika > \"Per our conversation, while updating the endorsements section in the GW POS, I came across the WC 30 03 01 New Mexico Safety Device Exclusion Endorsement and the WC 30 03 02 New Mexico Safety Device Coverage Endorsement. It appears that our system has the 5% credit backwards as it’s currently taking it off when the Coverage Endorsement is selected.\"\n\nDuring investigation I've found that this discount is not applied in its own routine (though one was created for this purpose). \nThe discount is actually applied in manual premium routine for New Mexico, so it will not appear in a distinct rating worksheet entry."],
        "id":"b6837cc9-2b60-4d06-abed-aa0b272f1468",
        "_version_":1634270323151994880},
      {
        "tag":["split gw-832"],
        "title":["WC7 Rating Period"],
        "updated":["20190531.1332"],
        "citation":["srikanth.sridhar@pwc.com"],
        "created":["20190531.1013"],
        "info":["While calculating the Rating Period, the methods determine the RatingStart and RatingEnd, which in turn becomes the parameters EffectiveDate and ExpirationDate.\n\nRating End is smaller of Cancellation Effective Date and PeriodEnd and this can cause issues in Split Periods where Cancellation Effective Date is < PeriodEnd AND also smaller than RatingStart of the Split Period.\n\nAll behaviors are from OOTB Basic Templates.\n\nKeywords to search:\nRating End in SplitPeriods, \nSplit Periods and Cancellation\nAnd more specifically calculateRatingEnd()\n"],
        "id":"1bc42794-2afb-4141-a857-61c1571e8884",
        "_version_":1635081034073636864},
      {
        "tag":["jdwp scratchpad"],
        "title":["Remote debugging/execution for v9 core applications"],
        "updated":["20190531.1728"],
        "created":["20190425.1210"],
        "info":["* I originally sent email on 20190418\n* kowshik on 20190425, \"FYI, I created SD ticket #89455 for enabling remote connections to lower environments through studio.\"\n\n2090531: had opened case 00357481 with Guidewire asking them whether the remote execution could be done without the DCEVM installed.\nTheir response was to use the DataChangeAPI, KB article 000008035.  Case closed.  Next step is to request that DI install the DCEVM in DEV."],
        "id":"6746f489-124d-491f-b38e-dc5553c93e3a",
        "_version_":1635095996672245760},
      {
        "tag":["document production"],
        "title":["AEM server issue"],
        "updated":["20190522.1459"],
        "created":["20190520.0857"],
        "info":["SAXParseException: cvc-elt.4.2: Cannot resolve 'MyArrayOf_xsd_anyType' to a type definition for element 'ns1:stackTrace'.\n\nThis typically occurs when a user attempts to bind a submission\n\nSOLUTION:\nThis particular occurrence was fixed by an unknown modification to the file deployed to the AEM server (form patterns).\nSomeone worked with the vendor (4-point) to update the artifacts and the issue was resolved."],
        "id":"4a05cb18-b566-407f-9c61-2bd7681f7d4c",
        "_version_":1634271210017652736},
      {
        "tag":["premium audit"],
        "title":["Nexus SFTP Access Denied"],
        "created":["20190603.0847"],
        "info":["20190603: SD tickets 91217, 91218\n\n20190506:\nWe had a SFTP change scheduled this weekend for your Audit and LC environments.\nYour Audit side asked to be pushed back to a different weekend, so we did that for them. \nHowever, the SFTP for your LC was related to the Audit side so when LC was changed it inadvertently changed the Audit side.\nIt was just a matter of enabling the directories on our side.\n\nThanks\nNick Skinner\n"],
        "id":"304b291e-ab2f-4bc8-992d-ab439226e813",
        "_version_":1635335017214246912},
      {
        "tag":["plugin messaging"],
        "title":["salesforce pipline integration"],
        "updated":["20190522.1644"],
        "created":["20190412.1611"],
        "info":["This is a messaging pluing that was created to transmit information, documents and whatever the api allows for.\n\n*it pull slotting information, so consider it a dependency if changes occur to slotting\n* messaging-config.xml > \"SalesForcePiplineTransport\""],
        "id":"46ee1da9-87ad-462a-b1c6-9cc90968b983",
        "_version_":1634277710926708736},
      {
        "title":["Ratebook validation"],
        "created":["20190524.0858"],
        "info":["Displayed from Policy Center v9:\n\nErrors were found in file: Import from \n\"Utilities -> Import Data\" partially validates Ratebooks which can cause errors and is blocked for production systems. \nImport from \"Rating -> Rate Books -> Import from XML\" to perform a complete set of validations."],
        "id":"fd38ca86-7136-4de7-aa2c-f0d2b248df17",
        "_version_":1634429632624197632},
      {
        "tag":["policy integration plugin messaging"],
        "title":["BillingMessageTransport"],
        "updated":["20190604.1718"],
        "created":["20190604.1709"],
        "info":["gw.plugin.messaging.BillingMessageTransport\n\nThis is messaging plugin that controls the actions upon the associated billing system (Billincg Center), related to high-level objects.\nMost of this is done by calling functions on the OOB IBillingSystemPlugin.  Because of this, there are no clear payloads \n(probably becuase the plugin is making web services calls).\n\n  public static final var DEST_ID : int = 66  \n  public static final var UPDATEACCOUNT_MSG : String = \"AccountChanged\"  \n  public static final var TRANSFERPOLICY_MSG : String = \"TransferPolicy\"  \n  public static final var CREATEPERIOD_MSG : String = \"CreatePeriod\"  \n  public static final var CANCELPERIOD_MSG : String = \"CancelPeriod\"  \n  public static final var CHANGEPERIOD_MSG : String = \"ChangePeriod\"  \n  public static final var ISSUEPERIOD_MSG : String = \"IssuePeriod\"  \n  public static final var REINSTATEPERIOD_MSG : String = \"ReinstatePeriod\"  \n  public static final var RENEWPERIOD_MSG : String = \"RenewPeriod\"  \n  public static final var REWRITEPERIOD_MSG : String = \"RewritePeriod\"\n  public static final var FINALAUDIT_MSG : String = \"FinalAudit\"  \n  public static final var PREMIUMREPORT_MSG : String = \"PremiumReport\"  \n  public static final var WAIVEFINALAUDIT_MSG : String = \"WaiveFinalAudit\"  \n  public static final var NEWFINALAUDIT_MSG : String = \"ScheduleFinalAudit\"  \n  public static final var CREATEPRODUCER_MSG : String = \"OrganizationAdded\"\n  public static final var UPDATEPRODUCER_MSG : String = \"OrganizationChanged\"\n  public static final var CREATEPRODUCERCODE_MSG : String = \"ProducerCodeAdded\"\n  public static final var UPDATEPRODUCERCODE_MSG : String = \"ProducerCodeChanged\"\n  public static final var PREMIUMREPORTDUEDATE_MSG : String = \"PremiumReportDueDate\"  \n  public static final var UPDATECONTACT_MSG : String = \"ContactChanged\"\n  public static final var JOBADDED_MSG : String = \"JobAdded\""],
        "id":"3ecdb34d-606b-4aba-8e5f-3e30ed99380c",
        "_version_":1635457604614356992},
      {
        "tag":["premium audit"],
        "title":["Nexus - Unable to access FTP site"],
        "citation":["email with Nick Skinner"],
        "created":["20190603.1130"],
        "info":["My apologies as I have not been able to respond to many messages today until now.\nThere was a change over this past weekend for the SFTP location.\nI am attaching the documentation I sent out about this.\nI guess is that you were not brought into the loop for some reason\n\nPlease review and let me know if you still are having issues.\n\nThank you\nNick\n\n•\tThe new SFTP server location will be ftp.nexus-mgt.com.\n•\tNo changes are being made to the data feeds as built.  This is simply a change to the connecting endpoint.\n•\tPlease white list the following IP addresses in both directions:  68.169.20.64 & 68.169.20.26\n•\tYour credentials for connection will remain the same\n"],
        "id":"0d184700-e159-4c0d-ac56-4b556d678daf",
        "_version_":1635345196205998080},
      {
        "tag":["service desk 91290"],
        "title":["PROD: Univest-Stone Ridge Golf. Policy not in Billing Center"],
        "updated":["20190604.1447"],
        "created":["20190604.1313"],
        "info":["Policy = 1019912 for Univest-Stone Ridge did not make it over to Billing Center.  \nAccount = 5000008920\n\nThe Account does not exist in BC.  \nPolicy was bound on 8/23/18.  Policy change done on 6/3/19 to correct the mailing address on the Account and Policy.  \nError message from the policy change is in the Messages queue but no error message from the original submission done on 8/23/18.  \nWe have not sent any billing out on this policy.  Please take a look.\n\nIdeas:\n1 - rewrite the policy\n2 - sql update, insert the policy (have to worry about dependencies)\n3 - web service call to add policy\n4 - mimic/mock a message from policy center somehow (dataChange, script)"],
        "id":"6fd4c2c7-14b8-4636-86d4-3f46288e5dc9",
        "_version_":1635448552091025408},
      {
        "tag":["guidewire"],
        "title":["Dynamic Code Evolution for the Java Virtual Machine"],
        "citation":["http://dcevm.github.io/"],
        "created":["20190605.1036"],
        "info":["This project is a fork of original DCEVM project. The purpose of the project is to maintain enhanced class redefinition functionality for OpenJDK HotSpot 7/8/9/10/11 and Oracle JVM.\n\nWe are currently using artifacts from this site in our development environments."],
        "id":"a46e604d-cb0c-4fb5-ac56-6ee95f26b3d1",
        "_version_":1635523065187139584},
      {
        "title":["Upgrade and OSE lessons learned"],
        "created":["20190605.1122"],
        "info":["* do not let anyone unfamiliar with the primary codebase perform initial code merging or baselining (such as vendor, partners); \nmerge issues have been one of the primary reasons for defects that we've encountered (though we have not created a metric to track this)"],
        "id":"364d44bb-73d9-4fe0-abae-4309ac135a7d",
        "_version_":1635525984909262848},
      {
        "tag":["links shares folders data"],
        "title":["Production logs and resources"],
        "created":["20190603.1012"],
        "info":["\\\\copperpoint.com\\appdata\n\\\\copperpoint.com\\applogs\n\n### Document Production\n\n\\\\aempvwas001 = root\n\\\\aempvwas001\\AEM_Logs = logs from adobe server\n\\\\aempvwas001\\DocumentSvcData = queues, batch printing, staging..\n\n\n\n"],
        "id":"45d0469d-b1e4-4e8d-81ec-5fd47956a788",
        "_version_":1635341205476737024},
      {
        "tag":["link url"],
        "title":["Control M application"],
        "created":["20190603.1031"],
        "info":["stage = https://ctmstgss.copperpoint.com/SelfService/\nprod = https://ctmprdss.copperpoint.com/SelfService/"],
        "id":"a250bc02-622b-41e6-a448-17ce213ff42d",
        "_version_":1635341419157651456},
      {
        "tag":["gosu script billing plugin"],
        "title":["Create account/policy objects in Billing Center from Policy Center"],
        "created":["20190607.1444"],
        "info":["/**\n * SD 91290 | afrancis | Custom gosu intended to mimic behavior of the policy/billing message transport already in use.\n *\n * The objective is to create the account and policy that never made it to Billing Center in the initial binding,\n * without having to use the messaging platform.\n */\n\nvar log = LoggingUtil.CPMI_INTEGRATION\nlog.info(\"91290: Executing\")\n\nvar period = gw.api.database.Query.make(PolicyPeriod).compare(\"PublicID\", Equals, \"pcprod:412842\").select().AtMostOneRow\nlog.info(\"91290: period = \" + period)\n\nvar plugin = Plugins.get(IBillingSystemPlugin)\nlog.info(\"91290: plugin = \" + plugin)\nvar result = ''\n\n// Primary account\nif (not plugin.accountExists(period.Policy.Account.AccountNumber)) {\n  result = plugin.createAccount(period.Policy.Account, generateTransactionID(period) + \"-0\")\n  log.info(\"91290: create account result: \" + result)\n}\n\n// 'Alt' account\nif (period.AltBillingAccountNumber != null and not plugin.accountExists(period.AltBillingAccountNumber)) {\n  var account = Account.finder.findAccountByAccountNumber(period.AltBillingAccountNumber)\n  result = plugin.createAccount(account, generateTransactionID(period) + \"-1\")\n  log.info(\"91290: create alt account result: \" + result)\n}\n\nvar slice = period.getSlice(period.PeriodStart)\nlog.info(\"91290: slice: \" + slice?.PublicID)\n\nresult = plugin.createPolicyPeriod(slice, generateTransactionID(period) + \"-2\")\nlog.info(\"91290: create period result: \" + result)\n\nlog.info(\"91290: Done\")\n\nfunction generateTransactionID(per: PolicyPeriod) : String {\n  return \"PC:\" + per.ID + \"-\" + \"AccountPolicyResync\" + \"-\" + \"CustomScript\"\n}"],
        "id":"38a2ee45-d2e4-4bca-8152-dbba770ea1e4",
        "_version_":1635719859245416448},
      {
        "tag":["environment"],
        "title":["database connections"],
        "updated":["20190610.1110"],
        "created":["20190418.1011"],
        "info":["dev (upgrade) = GWRDVWSQ001\\GWRDEV\nint (upgrade) = GWRIVWSQ001\\GWRINT\nstg (upgrade) = GWRSVWSQ001\\GWRSTG\nstg2/3 = GWRSVWSQ010\\GWRSTG\n\ngwcopy = SV0253\\GWCOPY (production copy, read only)\n\nint (ose) = GWOIVWSQ001\\GWOINT\nstg (ose) = GWOSVWSQ001\\GWOSTG\nstg2/3 (ose) = GWOSVWSQ010\\GWOSTG\n\nBI dev = SV0394\\BIDEV, \npaslnpr_d1, sv-gwpc-pas-uat, restored weekly from production, so is essentially a BICOPY (production data)\n\n\ngwcopy = DWHPVWSQ010, GWCPY_cc, GWCPY_cmcc, GWCPY_int, production copy of Claim center; cannot access yet, have to request\n"],
        "id":"fbf6e197-a103-4551-ac37-83665ec7ea14",
        "_version_":1635978309466587136},
      {
        "tag":["service desk 91268 91217 91218"],
        "title":["GWPC-PremiumAuditTPBatchProcess - Ended NOT OK"],
        "updated":["20190605.1238"],
        "created":["20190604.1304"],
        "info":["Created following to increase timeout\n\nCore Apps   /   GW-898 \nExternalize the Timeout Used for PremiumAuditTPBatchProcess \n\nFound also that code was not properly merged in Policy Center (cc9claimsearch...)"],
        "id":"2a8bea86-87d9-4bca-a5f2-8024fc530046",
        "_version_":1635530642234015744},
      {
        "tag":["commercial lines integration cover-all majesco"],
        "title":["Other Lines"],
        "created":["20190607.1432"],
        "info":["This was built somewhere around 2016 to integrate a commercial-lines vendor that is used to intake a support those policies.\n\npackage com.cpmi.webservices.ol.coverall.accountsync.CoverAllAccountSyncProcessorImpl"],
        "id":"b08fdc76-958c-4f33-a6da-e3b4cc135f5f",
        "_version_":1635719515026227200},
      {
        "tag":["service desk"],
        "title":["91402 Remove Legacy (GWO/OSE) Logging and Data Shares"],
        "created":["20190606.1618"],
        "info":["Opened to clean out confusion in log/data shares."],
        "id":"2f532fdf-f94f-490f-a41a-57ae8a0b823b",
        "_version_":1635635027257589760},
      {
        "tag":["bottom line admin"],
        "title":["C-series"],
        "created":["20190610.0857"],
        "info":["* Daniel (and I would imagine Leena) administer c-series users and rights.\n"],
        "id":"bc2f9f42-e16e-45de-8194-b1be4a22d4b3",
        "_version_":1635969730161410048},
      {
        "title":["Add PE/CC to skipped envs"],
        "created":["20190610.1134"],
        "info":["* heard of a need to add portal and claims to the envs in which they are not currently configured, int2/stg2"],
        "id":"f491bd4c-4daf-47a5-91ff-da3eff3f1213",
        "_version_":1635979631235432448},
      {
        "title":["Shinobu quit"],
        "created":["20190607.1559"],
        "info":["Today was Shinobu's (from the Web team) day.  She is moving on to USAA insurance."],
        "id":"7d03b47f-b438-41bb-ae5a-d6dce0b61a5d",
        "_version_":1635724466026708992},
      {
        "tag":["intro meeting kickoff"],
        "title":["Other States New Business Slotting"],
        "updated":["20190617.1219"],
        "created":["20190617.1218"],
        "info":["Hi team – \n\nHere is a quick recap of some of the things talked about for Other States New Business Slotting. I’ve also attached the document Stephen was presenting for reference.\n\n•\tUsing DataRobot, we could possibly upload a new Matrix of values and factors to quickly update records\n•\tCan provide a spreadsheet, add updated numbers, manipulate and upload which is relatively quick way to update records, not a UI or any programming changes but just a simple upload\n•\tURL indicator will show that it's a new version\n•\tCan still use top 3 reason codes that is currently used\n•\tThere will need to be a governance process on changing these numbers, since this a critical business change. Will need approvals from Jennifer, and others? Before updating so policies aren't being changed just on the fly. After approvals, upload file to DataRobot to update the values.\n•\tTables are fairly understandable, table-oriented approach. Very similar to how CA does their process \n•\tChanges to MiddleWare (ISL) code - under these conditions, hit this model and call this API. OR under other conditions, hit that model and call a different API.\n•\tNB Slotting - using Python code for pre and post processing, rewrite in Java? – I missed some of this, so this might not be accurate.\n\n \nGet a timeline for when this project should be completed, to give Bipin, Alex, and Anthony enough time to develop and test the models and the integrations. – I will get more information on this and will update you as soon as I hear anything.\n \nThanks!"],
        "id":"7934e4a8-7b10-4a9a-83d6-6124aeae0a4a",
        "_version_":1636616584513454080},
      {
        "tag":["gosu scratchpad"],
        "title":["Emod test script"],
        "created":["20190612.0947"],
        "info":["uses cpmi.integ.services.emod.dto.EMODProcessRequest\n\nvar api = new cpmi.integ.services.emod.EMODProcessAPI()\n\nvar req = new EMODProcessRequest()\nreq.EMODRiskID = \"987654321\"           // 9+ digit integer identifier\nreq.EMODPolicyEffectiveDate = \"2019-01-01\"      // valid, used to select period\nreq.EMODPolicyExpirationDate = \"2020-01-01\"    // valid, used to select period\nreq.EMODRatingEffectiveDate = \"2020-01-01\"      // valid date data\nreq.EMODRatingExpiraitonDate = null    // always NULL in practice\nreq.EMODRatingIssueDate = \"2019-04-01\"              // valid data, used in validations\nreq.EMODPolicyNumber = \"1000001\"\nreq.EMODRatingTypeCode = \"E\"      // always 'E'\nreq.EMODFactor = 1.1                  // a rate ranging from 0.430 to 2.940 (in practice)\nreq.EMODSplitRatingCode = 0   // 0 or 2; appears that when 2 that the emod is not processed (ignored)\nreq.EMODStatusIndicator = \"F\"    // either 'F' (final) or 'P' (preliminary)\nreq.EMODRevisionIndicator = 1  // either 1 or 2\nreq.EMODStateId = \"02\"    // 02=AZ,05=CO,30=NM,27=NV,43=UT\nreq.EMODReceivedDate = \"2019-04-01\"\n\nvar responses = api.processMultiStateEMOD({req})\nprint(\"response list size: \" + responses?.Count)\nfor(resp in responses) {\n\n  print(\"DeleteFromStaging: \" + resp.DeleteFromStaging)\n  print(\"EMODFactor: \" + resp.EMODFactor)\n  print(\"EMODPolicyEffectiveDate: \" + resp.EMODPolicyEffectiveDate)\n  print(\"EMODPolicyNumber: \" + resp.EMODPolicyNumber)\n  print(\"EMODRatingEffectiveDate: \" + resp.EMODRatingEffectiveDate)\n  print(\"EMODRiskID: \" + resp.EMODRiskID)\n  print(\"EMODStateId: \" + resp.EMODStateId)\n  print(\"EMODStatusDescription: \" + resp.EMODStatusDescription)\n  print(\"ExceptionDescription: \" + resp.ExceptionDescription)\n  print(\"PolicyStatus: \" + resp.PolicyStatus)\n  print(\"UpdateStaging: \" + resp.UpdateStaging)\n}\n  "],
        "id":"47a4a61f-6064-4a83-b9c2-c41ecc78e54e",
        "_version_":1636154115572629504},
      {
        "tag":["IM skype"],
        "title":["Terrorism Catastrophe rounding issues estimate"],
        "created":["20190619.1135"],
        "info":["[‎6/‎19/‎2019 11:15 AM]  Tenali, Sangeetha:  \nDo you know what that actual Terr and Cat issue is\nand how long it will take to fix ?\n \n[‎6/‎19/‎2019 11:15 AM]  \nthe issue is rounding, from what I understand\n \n[‎6/‎19/‎2019 11:15 AM]  Tenali, Sangeetha:  \nhow long is the fix ?\n \n[‎6/‎19/‎2019 11:16 AM]  \nthat thing?\n \n[‎6/‎19/‎2019 11:16 AM]  Tenali, Sangeetha:  \ndo we need to refile?\n \n[‎6/‎19/‎2019 11:16 AM]  \nthe fix is to add a new ratebook\ni don't believe so\n \n[‎6/‎19/‎2019 11:16 AM]  Tenali, Sangeetha:  \nOK\n \n[‎6/‎19/‎2019 11:16 AM]  \nwe're not changing any rates, just the rate routines\n \n[‎6/‎19/‎2019 11:16 AM]  Tenali, Sangeetha:  \nso adding a rate book and testing ???\nok\n \n[‎6/‎19/‎2019 11:16 AM]  \nyes\n \n[‎6/‎19/‎2019 11:16 AM]  Tenali, Sangeetha:  \n2 weeks of Dev and Test ?? yours and Rox\n \n[‎6/‎19/‎2019 11:16 AM]  \nwell, potentially multiple ratebooks, depending on the impact\nbut one release\ni realistically need 3 days\nrox can have the 7 \n \n[‎6/‎19/‎2019 11:17 AM]  Tenali, Sangeetha:  \nfor multiple ratebooks or just one ratebook ?\n \n[‎6/‎19/‎2019 11:17 AM]  \nbut sure\nlemme take a quick look\n \n[‎6/‎19/‎2019 11:19 AM]  \ni need at least one CW ratebook to be added and potentially one for each jurisdiction\npotentially 6\nthe state ratebooks are smaller in impact\n \n[‎6/‎19/‎2019 11:30 AM]  Tenali, Sangeetha:  \nOK..\n \n"],
        "id":"872594c4-dc1e-48d1-851c-414244bdce92",
        "_version_":1636795030910795776},
      {
        "tag":["emod"],
        "title":["Experience Modification integration summary"],
        "updated":["20190613.1438"],
        "created":["20190612.0929"],
        "info":["Code:\n* processMultiStateEMOD (function) is only called when multiple unprocessed rows exist with the same policy number and different states\n* isPolicyNumberExits is called for any case where there is only 1 row for a given policy number\n* deleteFromStaging > invalid record > virtualDelete > processedDate set to current time and processed flag kept '0' (false)\n* updateStaging > valid record > markAsProcessed > processedDate set to current time and processed flag set to '1' (true)\n\nIntegration records from NCCI (EMODRecord01):\n- may come in on a given date for unspecified number of past terms?\n- may come in on a given date for policies/terms 6+ months in the future (renewals)\n\nLogic extract:\nif(whatever...) then we do this..."],
        "id":"1efb4f02-dad6-409d-b51b-cafdfb1e0619",
        "_version_":1636263009741438976},
      {
        "tag":["missing jobs sql"],
        "title":["New business slotting issue"],
        "created":["20190617.1451"],
        "info":["Per email from John last week, it looks like there are 310 slotting requests in ISL (slotting store) that\ndo not reference existing job objects in policy center. \n\nselect\nreq.PlcyNo,  j.JobNumber, req.Uuid, resp.Prediction\nfrom\nGWCPY_int.dbo.NBSlottingRequest req\nleft join GWCPY_pc.dbo.pc_job j on req.PlcyNo = j.JobNumber\nleft join GWCPY_int.dbo.NBSlottingResponse resp on req.Uuid = resp.Uuid\nwhere\n\t1=1\nand\tj.JobNumber is null\n\nNot sure what is creating that effect.  Couple things that popped into my head:\n•\tare temp jobs being purged\n•\tis it possible for someone to trigger the slotting request from elsewhere than policy center (testing?)\n•\tdoes the transaction log tell us anything, or will a snapshot from last year have those jobs\n"],
        "id":"a12831be-4abd-426d-b4db-a24c6014829a",
        "_version_":1636626268959014912},
      {
        "tag":["sql multiple schema database slotting"],
        "title":["Cross-database query"],
        "created":["20190611.1838"],
        "info":["use GWCPY_pc\n\nselect distinct\npp.PolicyNumber, j.JobNumber, req.Uuid, res.*\nfrom \npc_job j\n\tleft join pc_policyperiod pp on j.ID = pp.JobID\n\tleft join GWCPY_int.dbo.NBSlottingRequest req on j.JobNumber = req.PlcyNo\n\tleft join GWCPY_int.dbo.NBSlottingResponse res on req.Uuid = res.Uuid\nwhere\n\t1=1\nand\tj.Subtype = 10\t\t\t-- submission\nand\treq.Uuid = res.Uuid\n\n\n"],
        "id":"2ae854f7-3dc0-4ad2-8500-c5ec95dd5e71",
        "_version_":1636096918414163968},
      {
        "title":["Add PE/CC to skipped envs"],
        "updated":["20190610.1136"],
        "created":["20190610.1134"],
        "info":["* in env coordination meeting, heard of a need to add portal and claims to the envs in which they are not currently configured, int2/stg2"],
        "id":"6096e4a3-0ebe-4a4d-b4be-ed4a8a28c776",
        "_version_":1635979658490019840},
      {
        "title":["Salesforce login"],
        "created":["20190619.1004"],
        "info":["Salesforce – Dev environment\nSandbox url:  https://cs4.salesforce.com\nUser ID:  guidewirepc@pacificcomp.com.cppipeline \nPW: Kaanapali29!\n\n\nINT\nURL:  test.salesforce.com\nUsername:  guidewirepc@copperpoint.com.cppreprod\n"],
        "id":"694d1025-046d-4fd0-a5ab-a346af24a334",
        "_version_":1636789265115381760},
      {
        "title":["1906 policy billing production release"],
        "created":["20190625.2216"],
        "info":["GW-365\tWC430305 Utah WOS - not populating correctly\nGW-368\tPHS-2003 (CO Certified Mailing List Non-Renewal) Displays AZ only policies\nGW-410\tPHS-2003 (CO Certified Mailing List Non-Renewal) has the wrong title\nGW-411\tPHS-2002 (CO Certified Mailing List Cancellation) Title Not Correct\nGW-412\tWC 00 03 13 (Waiver of Subrogation) does not display the policy premium when generated during a policy change\nGW-535\tShort Term Domestic Premium not Pro Rated\nGW-600\tBilled Amount Incorrect at Final Audit for Reporting Policies\nGW-624\tShort-Rate Expense Constant Charge Incorrect on Multi-State Policy\nGW-655\tFirst Payment Invoice Contains Charges Other Than First Payment\nGW-666\tAudit Summary Document Not Displaying Increased Limits Balance to Minimum and Short-Rate Penalty\nGW-667\tAudit Summary Document Should Display Short-Rate Penalty Expense Constant Separately from Short-Rate Penalty Premium\nGW-678\tNew Mexico Safety Device Exclusion Does Not Apply 5% Discount When Selected\nGW-703\tRemove Code to Set a Lower Commission Percentage on Policies with Total Premium < $2500\nGW-710\tWC 00 03 06 Benefits Deductible Endorsement Includes AZ Data\nGW-728\tEnhancement: Include User Email Address in Document Author Tag Data\nGW-736\tEnhancement: UT Workplace Safe Program Endorsement Should Be Attached to All Policies With UT Locations\nGW-740\tEnhancement: Add Shareholder and Member Titles for Covered Owner/Officer Endorsement\nGW-751\tGL - Commission Calculating Incorrectly on Policy Change for Reporting Policies When Reported is Greater than Written\nGW-755\tEnhancement - Update Demand Letter\nGW-769\tPROD ISSUE: Unable to view documents\nGW-818\tBC Created Two Payment Streams for Account With Policies Effective on the Same Day\nGW-830\tUsers Are Unable to Reassign Activities from the My Activities Page in PC and BC\nGW-831\tUpdated Assignment for Activity Does Not Hold\nGW-832\tPending Cancellation Policy Transaction is in Quoting Status\nGW-839\tDetermine Governing Class Code Does Not Follow Requirements\nGW-841\tFirst Payment Amount Missing from Payment Screen in PC\nGW-850\tCertain Roles Unable to Create Assigned Activity in BC\nGW-853\tIncorrect First Payment Displayed on Remittance Slip in Quote Packet\nGW-862\tCounty Field in Address is Missing From PC\nGW-869\tPart 2 - Two Separate First Payment Invoices Created for Policies with Same Invoice and Due Date\nGW-870\tPart 2 - BC migration plans did not update BC for expired policy\nGW-880\tCommission Statement Displays Incorrect Paid Premium (Basis) and Item Description\nGW-893\tFirst Payment Amount Not Displayed for Civic Reporting Policies\nGW-899\tUpdate Payment Screen in PC to Show Civic Plans for Renewing Civic Policies\nGW-900\tAudit Reversal Charges Not Correct on Cancelled Policy\nGW-919\tCommission Plan Incorrect Updated By System for Certain Producers\n"],
        "id":"8cf65e73-fd0e-4f4f-85a2-72faa8b217ec",
        "_version_":1637378924386189312},
      {
        "tag":["integration connection exception"],
        "title":["Please share server config settings that solved the queue issue when database connection"],
        "created":["20190628.1320"],
        "info":["From: O'Malley, Kathy \nSent: Wednesday, May 29, 2019 12:31 PM\n\nBryan,\nPlease share with Sangeetha and Bill the server config settings that GW recommended that solved our queue issue when there was a database connection issue.\nThanks!\n\n\nIn your JNDI/JDBC connection pool setting in your post you configured background connection check, but not test-on-borrow. This means the broken DB connection will remain in the pool for 5 sec (background-validation-millis). We expect you to set <validate-on-match> to true and we don’t care about <background-validation>. We suggest you work with RedHat as well as test out the InsuranceSuite to ensure it is resuming after DB connection is broken.\n\nThe following is RedHat JBoss 6.4 documentation on connection validation FYI:\n\nhttps://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/6.4/html/administration_and_configuration_guide/sect-database_connection_validation\n"],
        "id":"e918327c-c72b-4870-bb4d-f57d5f8184d6",
        "_version_":1637617073757618176},
      {
        "tag":["rating precision accuracy"],
        "title":["Rate routine rounding"],
        "citation":["email Carrick, Jennifer; Hughes, Pamela; O'Malley, Mary"],
        "created":["20190624.1152"],
        "info":["What should happen\n1>\tThe round off should happen after all the calculations are done – At the final step and should be rounded off to 3 digits\n2>\tThe LCM will be filed for 3 digits as part of 2020 rate changes\n3>\tThe changes should be for ALL Loss Rates and not limited to Terrorism and Cat\n4>\tThese changes will impact 6 rate books (5 states and 1 Country wide rate book)\n\nAction Items\n1>\tMary O’Malley will work with Marsha to determine when this change needs to done.\n2>\tIf done before 2020 Rate book testing, then do we do it just for Terrorism and Cat\n\nDev and Testing\n1>\tThe Dev and Testing will take about 2 to 3 weeks. \n"],
        "id":"ac7e5df9-fd70-4a47-a4ed-effb79134e02",
        "_version_":1637249135038955520},
      {
        "title":["Rate change endorsement"],
        "updated":["20190627.1145"],
        "created":["20190627.1128"],
        "info":["* Form pattern information\n\tCode: wc_rate_chg_end\n\tNumber: WC 00 04 07\n\tEdition: Ed. 4-84\n\tName: Rate Change Endorsement\n\tDocument Type: POLEND\n\n* Data model\n\tWC7Cost.RCERate_CPMI = The rate for 'Rate Change Endorsement(RCE)' form inference logic.\n\n\tThis value stores the rate used on the 'last' rating of the given code.  When this values differs from a new\n\trate (say.. on a policy change), the condition is triggered, which should result in a document generation.\n\n* Classes\n\tForm_WC_00_04_08.gs\n\tForm_WC_00_04_07.gs"],
        "id":"cbb9dd23-1db8-490f-b991-7f90b9d01f0d",
        "_version_":1637520402492162048},
      {
        "tag":["splunk preparation"],
        "title":["application daily log sizes"],
        "created":["20190620.1700"],
        "info":["Following are largest found app logs (pclog, bclog, ablog) for all nodes, for the past 2 months (in megs), in analysis for splunk kickoff\n\npolicy001 - ux, messaging\t28\npolicy002 - ux\t30\npolicy003 - ux\t23\npolicy006 - batch\t289\n\t\nbilling004 - ux, messaging\t1\nbilling005 - ux\t2\nbilling007 - Batch\t205\n\t\ncontact012 - ux\t7\ncontact013 - batch\t24\n\nTotal of 609 megs on a 'worst day'\n"],
        "id":"5aa8ed77-a6a8-4d14-90c9-7bf3c7a23387",
        "_version_":1636906146292826112},
      {
        "tag":["billing center extension"],
        "title":["Commission reserves"],
        "created":["20190626.1632"],
        "info":["bcdb.dbo.bcx_PPCmsnReserve_Ext = this table is used to store reserves for reporting-plan policies only; installment policy info not involved "],
        "id":"60381d74-cc80-468b-8927-cd19afed750c",
        "_version_":1637447967192383488},
      {
        "tag":["gosu"],
        "title":["Rule logging"],
        "created":["20190619.1721"],
        "info":["LoggingUtil.CPMI_INTEGRATION.info(\"Destination \" + messageContext.DestID + \"|\" + actions.Rule.DisplayName + \"|\" + messageContext.EventName)"],
        "id":"a6582c5d-9981-4cc5-bf02-724ea3b38d93",
        "_version_":1636816829203611648},
      {
        "tag":["confluence link"],
        "title":["Integration requirements"],
        "created":["20190620.0918"],
        "info":["https://copperpoint.atlassian.net/wiki/spaces/OSEP/pages/34570261/Integrations"],
        "id":"57b41a4c-f219-4b99-8aa1-59417d9cb34a",
        "_version_":1636876993445232640},
      {
        "title":["Data change script needs to be run in BC PROD today"],
        "created":["20190628.1052"],
        "info":["Kowshik - SD91968 and the data chance branch name is SD91968_JuneChargeCorrection."],
        "id":"e3804e70-f096-4657-873d-099bb0417328",
        "_version_":1637607812279304192},
      {
        "tag":["queue failover event messages cluster"],
        "title":["Stuck messages in Contact Manager"],
        "created":["20190702.1038"],
        "info":["Hi Frost,\n\nI’d issues with my email and unable to read and respond to the emails for a while. But, I gave an update to Stephen w.r.t this issue.\n\nTo answer your question on “Requires Manual Intervention”, you have to choose the action of “Complete Failover”  by going to Server Tools -> Cluster -> Components  and select the desired queue.\nI did that to bring back the server to the status of “Started” however it didn’t help me to reprocess the records.\n\nThe following highlighted contact which got stuck in the queue is suspending the queue and it’s a known issue. It usually won’t suspend the queue and allow the other records to process it.\nBut, it suspended the queue after the 6/27 CM release and looks like none of us looked into this issue so far.\n\nThe pending records sitting in the PC queue was not processed after the restart in the beginning but eventually after some time all of them are went through except the highlighted record. \n\nPlease continue to research and fix this record  or skip it to resolve the issue.\n"],
        "id":"4815a89e-a758-4685-9aa5-51906059e6ab",
        "_version_":1637969184436518912},
      {
        "tag":["database upgrade model version workaround"],
        "title":["GWLifecycleException: A database upgrade is in progress."],
        "citation":["email from Kowshik 20190625"],
        "created":["20190703.1457"],
        "info":["Because of an issue with the Jenkins server, 1906 got deployed to INT2 which already had 1907 deployed \nfrom previous builds. This caused a database upgrade exception and deploying the latest 1907 build is not helping either. \n\nWe can try two options in cases like this:\n1)\tDo a DB drop.\n2)\tRun the following SQL delete script and restart or redeploy to the server (this might or might not work)\n\ndelete from pc_systemparameter where name like 'UpgradeIn%';\n\nMy idea is to try the second option and if it works, it will save us the time of restoring the DB. If it doesn’t we will go the normal route of dropping the DB.\nPlease let me know your thoughts.\n\n\n** Option 2 worked but only because we are using the newer war.  Had we tried 1906 again, it would continually fail."],
        "id":"96a4d5dc-51b6-47ed-be90-d579c1aacc05",
        "_version_":1638076067249913856},
      {
        "tag":["log tag pattern"],
        "title":["Things to look for in logs"],
        "updated":["20190718.1139"],
        "created":["20190426.1035"],
        "info":["nexus |  file = \"premiumaudittpbatch*\", pattern = \"Policy data removed due to error on policy\"\nreinstatement document batch error = 'ReinstatementDocumentGenerationBatch'\nemod.log = 'feedback'\nestimated audit | file = \"*estimatedauditbatch*\",  pattern = \"has no quote\"\n\nupgrading\n-----------------------------------------------------------------------------------------------\n\"Major version upgrade: performing a full upgrade\"\n\"Datamodel version (4, 428, 9, 19) requires an upgrade to version (6, 24, 11, 9)\"\n\"Successful database upgrade to version (6, 24, 11, 9)\""],
        "id":"6aa87617-e417-48db-84c4-b97e8d7bbc84",
        "_version_":1639422714418561024},
      {
        "tag":["delinquency billing"],
        "title":["Delinquncies"],
        "citation":["sprint planning meeting"],
        "created":["20190719.1057"],
        "info":["* there are 4 delinquency workflows\n* there are 4 delinquency documents "],
        "id":"05a84293-b969-4aa6-9dd5-69244052e312",
        "_version_":1639510594195292160},
      {
        "tag":["ISL SSH TLS"],
        "title":["External service calls broken as of late April"],
        "updated":["20190719.1730"],
        "citation":["https://blogs.oracle.com/java-platform-group/diagnosing-tls,-ssl,-and-https"],
        "created":["20190719.1650"],
        "id":"7902068a-0d98-4892-be54-9062ed284cbe",
        "info":["Since the late April we experienced connection issues with all integrations that made calls to external services (slotting, salesforce, experian).\nThe following exceptions are what was observed.  It turned out that an integration that Sham wrote was explicitly setting the SSL/TLS version\nto use when making external calls (see SSLTruster class, removed as of 1907RUN branch in ISL).  When coverall updated their JVMs, something\nin the call must have invalidated the trust for our JVMs, which would result in invalid connections for the other external facing integrations.\n\nLesson: don't write code that explicitly indicates the ssl/tls versions unless you are committed to maintaining that code and the related dependencies.\n\n===========================================================================\n\n\\\\copperpoint.com\\applogs\\IntegrationServiceLayer\\ISLPRD\\islpvlas002\\Slotting.log.2019-07-18 7/18/2019 8:15:31 PM\n299   org.springframework.web.client.ResourceAccessException: I/O error: Connection reset; nested exception is java.net.SocketException: Connection reset                       \n353   Caused by: java.net.SocketException: Connection reset                                                                                                                     \n\n\\\\copperpoint.com\\applogs\\IntegrationServiceLayer\\ISLPRD\\islpvlas001\\Experian.log.2019-07-17 7/17/2019 8:14:59 PM\n341   javax.net.ssl.SSLException: Received fatal alert: protocol_version                                                                                                                                                                                                                                                                    \n342       at sun.security.ssl.Alerts.getSSLException(Alerts.java:208)                                                                                                                                                                                                                                                                       \n343       at sun.security.ssl.Alerts.getSSLException(Alerts.java:154)                                                                                                                                                                                                                                                                       \n406   com.cpmi.webservices.experian.client.exception.NetConnectUrlValidatorException: javax.net.ssl.SSLException: Received fatal alert: protocol_version                                                                                                                                                                                    \n458   Caused by: javax.net.ssl.SSLException: Received fatal alert: protocol_version                                                                                                                                                                                                                                                         \n459       at sun.security.ssl.Alerts.getSSLException(Alerts.java:208)                                                                                                                                                                                                                                                                       \n460       at sun.security.ssl.Alerts.getSSLException(Alerts.java:154)                                                                                                                                                                                                                                                                       \n474   17 Jul 2019 14:20:16,326 [https-jsse-nio-8443-exec-11] ERROR ExperianImpl.getExperianScore: \ncom.cpmi.webservices.experian.client.exception.NetConnectClientException: \ncom.cpmi.webservices.experian.client.exception.NetConnectUrlValidatorException: javax.net.ssl.SSLException: Received fatal alert: protocol_version              \n\n\\\\copperpoint.com\\applogs\\IntegrationServiceLayer\\ISLPRD\\islpvlas001\\Salesforce.log.2019-07-17 7/17/2019 8:21:10 PM\n1169  17 Jul 2019 14:26:53,748 [https-jsse-nio-8443-exec-3] ERROR SalesForceServiceImpl.updateInsertRecord: SalesForceServiceImpl:updateInsertRecord: com.sforce.ws.ConnectionException: Failed to send request to https://login.salesforce.com/services/Soap/c/45.0/0DF2E000000PQIa                                                   \n1171  17 Jul 2019 14:26:54,200 [https-jsse-nio-8443-exec-3] ERROR SalesForceServiceImpl.updateInsertRecord: SalesForceServiceImpl:updateInsertRecord: CAUGHT in Catch BLOCK: com.sforce.ws.ConnectionException: Failed to send request to https://pacificcomp.my.salesforce.com/services/Soap/c/45.0/00D3000000001U3/0DF2E000000PQIa   \n"],
        "_version_":1639535208201977856}]
  }}